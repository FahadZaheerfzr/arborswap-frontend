{"version":3,"sources":["views/Pool/index.tsx"],"names":["Body","styled","CardBody","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","dropdownDeep","Pool","account","useActiveWeb3React","t","useTranslation","trackedTokenPairs","useTrackedTokenPairs","tokenPairsWithLiquidityTokens","useMemo","map","tokens","liquidityToken","toV2LiquidityToken","liquidityTokens","tpwlt","_useTokenBalancesWith","useTokenBalancesWithLoadingIndicator","undefined","_useTokenBalancesWith2","_slicedToArray","v2PairsBalances","fetchingV2PairBalances","liquidityTokensWithBalances","filter","_ref2","_v2PairsBalances$liqu","address","greaterThan","v2Pairs","usePairs","_ref3","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","_ref4","v2Pair","Boolean","_jsx","Page","children","_jsxs","AppBody","AppHeader","title","subtitle","Text","color","textAlign","Dots","index","FullPositionCard","pair","mb","Flex","flexDirection","alignItems","mt","Button","id","variant","scale","as","Link","to","CardFooter","style","width","startIcon","AddIcon"],"mappings":"iTAeMA,EAAOC,YAAOC,IAAPD,CAAgBE,MAAAC,YAAA,oCACP,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAOC,YAAY,IAG/C,SAASC,IACtB,IAAQC,EAAYC,cAAZD,QACAE,EAAMC,cAAND,EAGFE,EAAoBC,cACpBC,EAAgCC,mBACpC,kBAAMH,EAAkBI,KAAI,SAACC,GAAM,MAAM,CAAEC,eAAgBC,YAAmBF,GAASA,SAAQ,GAAE,GACjG,CAACL,IAEGQ,EAAkBL,mBACtB,kBAAMD,EAA8BE,KAAI,SAACK,GAAK,OAAKA,EAAMH,cAAc,GAAC,GACxE,CAACJ,IAEHQ,EAAkDC,YACzC,OAAPf,QAAO,IAAPA,SAAWgB,EACXJ,GACDK,EAAAC,YAAAJ,EAAA,GAHMK,EAAeF,EAAA,GAAEG,EAAsBH,EAAA,GAMxCI,EAA8Bd,mBAClC,kBACED,EAA8BgB,QAAO,SAAAC,GAAA,IAAAC,EAAGd,EAAca,EAAdb,eAAc,OACb,QADac,EACpDL,EAAgBT,EAAee,gBAAQ,IAAAD,OAAA,EAAvCA,EAAyCE,YAAY,IAAI,GAC1D,GACH,CAACpB,EAA+Ba,IAG5BQ,EAAUC,YAASP,EAA4Bb,KAAI,SAAAqB,GAAS,OAAAA,EAANpB,MAAmB,KACzEqB,EACJV,IAAiC,OAAPO,QAAO,IAAPA,OAAO,EAAPA,EAASI,QAASV,EAA4BU,SAAiB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASK,MAAK,SAACC,GAAM,OAAMA,CAAM,KAE/GC,EAA0BP,EAAQnB,KAAI,SAAA2B,GAAQ,OAARjB,YAAAiB,EAAA,GAAQ,EAAU,IAAEb,QAAO,SAACc,GAAM,OAAqBC,QAAQD,EAAO,IAiClH,OACEE,cAACC,IAAI,CAAAC,SACHC,eAACC,IAAO,CAAAF,SAAA,CACNF,cAACK,IAAS,CAACC,MAAO1C,EAAE,kBAAmB2C,SAAU3C,EAAE,6CACnDuC,eAACnD,EAAI,CAAAkD,SAAA,CAlCJxC,EAOD8B,EAEAQ,cAACQ,KAAI,CAACC,MAAM,aAAaC,UAAU,SAAQR,SACzCF,cAACW,IAAI,CAAAT,SAAEtC,EAAE,gBAIY,OAAvBgC,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBH,QAAS,EAC7BG,EAAwB1B,KAAI,SAAC4B,EAAQc,GAAK,OAC/CZ,cAACa,IAAgB,CAEfC,KAAMhB,EACNiB,GAAIH,EAAQhB,EAAwBH,OAAS,EAAI,OAAS,GAFrDK,EAAO1B,eAAee,QAG3B,IAIJa,cAACQ,KAAI,CAACC,MAAM,aAAaC,UAAU,SAAQR,SACxCtC,EAAE,yBAvBHoC,cAACQ,KAAI,CAACC,MAAM,aAAaC,UAAU,SAAQR,SACxCtC,EAAE,iDAiCFF,IAAY8B,GACXW,eAACa,IAAI,CAACC,cAAc,SAASC,WAAW,SAASC,GAAG,OAAMjB,SAAA,CACxDF,cAACQ,KAAI,CAACC,MAAM,aAAaM,GAAG,MAAKb,SAC9BtC,EAAE,kCAELoC,cAACoB,IAAM,CAACC,GAAG,mBAAmBC,QAAQ,YAAYC,MAAM,KAAKC,GAAIC,IAAMC,GAAG,QAAOxB,SAC9EtC,EAAE,gCAKXoC,cAAC2B,IAAU,CAACC,MAAO,CAAElB,UAAW,UAAWR,SACzCF,cAACoB,IAAM,CAACC,GAAG,mBAAmBG,GAAIC,IAAMC,GAAG,OAAOG,MAAM,OAAOC,UAAW9B,cAAC+B,IAAO,CAACtB,MAAM,UAAWP,SACjGtC,EAAE,yBAMf,C","file":"static/js/9.7c37d724.chunk.js","sourcesContent":["import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Pair } from '@arborswap/sdk'\nimport { Text, Flex, CardBody, CardFooter, Button, AddIcon } from '@arborswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport FullPositionCard from '../../components/PositionCard'\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\nimport { usePairs } from '../../hooks/usePairs'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\nimport Dots from '../../components/Loader/Dots'\nimport { AppHeader, AppBody } from '../../components/App'\nimport Page from '../Page'\n\nconst Body = styled(CardBody)`\n  background-color: ${({ theme }) => theme.colors.dropdownDeep};\n`\n\nexport default function Pool() {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs],\n  )\n  const liquidityTokens = useMemo(\n    () => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken),\n    [tokenPairsWithLiquidityTokens],\n  )\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens,\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0'),\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances],\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  const renderBody = () => {\n    if (!account) {\n      return (\n        <Text color=\"textSubtle\" textAlign=\"center\">\n          {t('Connect to a wallet to view your liquidity.')}\n        </Text>\n      )\n    }\n    if (v2IsLoading) {\n      return (\n        <Text color=\"textSubtle\" textAlign=\"center\">\n          <Dots>{t('Loading')}</Dots>\n        </Text>\n      )\n    }\n    if (allV2PairsWithLiquidity?.length > 0) {\n      return allV2PairsWithLiquidity.map((v2Pair, index) => (\n        <FullPositionCard\n          key={v2Pair.liquidityToken.address}\n          pair={v2Pair}\n          mb={index < allV2PairsWithLiquidity.length - 1 ? '16px' : 0}\n        />\n      ))\n    }\n    return (\n      <Text color=\"textSubtle\" textAlign=\"center\">\n        {t('No liquidity found.')}\n      </Text>\n    )\n  }\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Your Liquidity')} subtitle={t('Remove liquidity to receive tokens back')} />\n        <Body>\n          {renderBody()}\n          {account && !v2IsLoading && (\n            <Flex flexDirection=\"column\" alignItems=\"center\" mt=\"24px\">\n              <Text color=\"textSubtle\" mb=\"8px\">\n                {t(\"Don't see a pool you joined?\")}\n              </Text>\n              <Button id=\"import-pool-link\" variant=\"secondary\" scale=\"sm\" as={Link} to=\"/find\">\n                {t('Find other LP tokens')}\n              </Button>\n            </Flex>\n          )}\n        </Body>\n        <CardFooter style={{ textAlign: 'center' }}>\n          <Button id=\"join-pool-button\" as={Link} to=\"/add\" width=\"100%\" startIcon={<AddIcon color=\"white\" />}>\n            {t('Add Liquidity')}\n          </Button>\n        </CardFooter>\n      </AppBody>\n    </Page>\n  )\n}\n"],"sourceRoot":""}