{"version":3,"sources":["components/Links/index.tsx","views/PoolFinder/index.tsx"],"names":["StyledInternalLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","primary","Fields","StyledButton","Button","input","_ref2","text","PoolFinder","_ref3","account","useActiveWeb3React","t","useTranslation","_useState","useState","TOKEN1","_useState2","_slicedToArray","activeField","setActiveField","_useState3","ETHER","_useState4","currency0","setCurrency0","_useState5","_useState6","currency1","setCurrency1","_usePair","usePair","undefined","_usePair2","pairState","pair","addPair","usePairAdder","useEffect","validPairNoLiquidity","PairState","NOT_EXISTS","Boolean","EXISTS","JSBI","equal","reserve0","raw","BigInt","reserve1","position","useTokenBalance","liquidityToken","hasPosition","greaterThan","handleCurrencySelect","useCallback","currency","TOKEN0","prerequisiteMessage","_jsx","LightCard","padding","children","Text","textAlign","_useModal","useModal","CurrencySearchModal","onCurrencySelect","showCommonBases","selectedCurrency","onPresentCurrencyModal","Page","_jsxs","AppBody","AppHeader","title","subtitle","backTo","AutoColumn","style","gap","endIcon","ChevronDownIcon","onClick","Row","CurrencyLogo","ml","symbol","ColumnCenter","AddIcon","as","justifyItems","backgroundColor","borderRadius","to","MinimalPositionCard","justify","concat","currencyId","INVALID","fontWeight","LOADING","Dots"],"mappings":"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","file":"static/js/4.51bd2c68.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\n// An internal link from the react-router-dom library that is correctly styled\nconst StyledInternalLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\nexport default StyledInternalLink\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Currency, ETHER, JSBI, TokenAmount } from '@arborswap/sdk'\nimport { Button, ChevronDownIcon, Text, AddIcon, useModal } from '@arborswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row from '../../components/Layout/Row'\nimport CurrencySearchModal from '../../components/SearchModal/CurrencySearchModal'\nimport { PairState, usePair } from '../../hooks/usePairs'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { usePairAdder } from '../../state/user/hooks'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport StyledInternalLink from '../../components/Links'\nimport { currencyId } from '../../utils/currencyId'\nimport Dots from '../../components/Loader/Dots'\nimport { AppHeader, AppBody } from '../../components/App'\nimport Page from '../Page'\n\nenum Fields {\n  TOKEN0 = 0,\n  TOKEN1 = 1,\n}\n\nconst StyledButton = styled(Button)`\n  background-color: ${({ theme }) => theme.colors.input};\n  color: ${({ theme }) => theme.colors.text};\n  box-shadow: none;\n  border-radius: 16px;\n`\n\nexport default function PoolFinder() {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const [activeField, setActiveField] = useState<number>(Fields.TOKEN1)\n  const [currency0, setCurrency0] = useState<Currency | null>(ETHER)\n  const [currency1, setCurrency1] = useState<Currency | null>(null)\n\n  const [pairState, pair] = usePair(currency0 ?? undefined, currency1 ?? undefined)\n  const addPair = usePairAdder()\n  useEffect(() => {\n    if (pair) {\n      addPair(pair)\n    }\n  }, [pair, addPair])\n\n  const validPairNoLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS ||\n    Boolean(\n      pairState === PairState.EXISTS &&\n        pair &&\n        JSBI.equal(pair.reserve0.raw, JSBI.BigInt(0)) &&\n        JSBI.equal(pair.reserve1.raw, JSBI.BigInt(0)),\n    )\n\n  const position: TokenAmount | undefined = useTokenBalance(account ?? undefined, pair?.liquidityToken)\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.raw, JSBI.BigInt(0)))\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      if (activeField === Fields.TOKEN0) {\n        setCurrency0(currency)\n      } else {\n        setCurrency1(currency)\n      }\n    },\n    [activeField],\n  )\n\n  const prerequisiteMessage = (\n    <LightCard padding=\"45px 10px\">\n      <Text textAlign=\"center\">\n        {!account ? t('Connect to a wallet to find pools') : t('Select a token to find your liquidity.')}\n      </Text>\n    </LightCard>\n  )\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={handleCurrencySelect}\n      showCommonBases\n      selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\n    />,\n    true,\n    true,\n    'selectCurrencyModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Import Pool')} subtitle={t('Import an existing pool')} backTo=\"/pool\" />\n        <AutoColumn style={{ padding: '1rem' }} gap=\"md\">\n          <StyledButton\n            endIcon={<ChevronDownIcon />}\n            onClick={() => {\n              onPresentCurrencyModal()\n              setActiveField(Fields.TOKEN0)\n            }}\n          >\n            {currency0 ? (\n              <Row>\n                <CurrencyLogo currency={currency0} />\n                <Text ml=\"8px\">{currency0.symbol}</Text>\n              </Row>\n            ) : (\n              <Text ml=\"8px\">{t('Select a Token')}</Text>\n            )}\n          </StyledButton>\n\n          <ColumnCenter>\n            <AddIcon />\n          </ColumnCenter>\n\n          <StyledButton\n            endIcon={<ChevronDownIcon />}\n            onClick={() => {\n              onPresentCurrencyModal()\n              setActiveField(Fields.TOKEN1)\n            }}\n          >\n            {currency1 ? (\n              <Row>\n                <CurrencyLogo currency={currency1} />\n                <Text ml=\"8px\">{currency1.symbol}</Text>\n              </Row>\n            ) : (\n              <Text as={Row}>{t('Select a Token')}</Text>\n            )}\n          </StyledButton>\n\n          {hasPosition && (\n            <ColumnCenter\n              style={{ justifyItems: 'center', backgroundColor: '', padding: '12px 0px', borderRadius: '12px' }}\n            >\n              <Text textAlign=\"center\">{t('Pool Found!')}</Text>\n              <StyledInternalLink to=\"/pool\">\n                <Text textAlign=\"center\">{t('Manage this pool.')}</Text>\n              </StyledInternalLink>\n            </ColumnCenter>\n          )}\n\n          {currency0 && currency1 ? (\n            pairState === PairState.EXISTS ? (\n              hasPosition && pair ? (\n                <MinimalPositionCard pair={pair} />\n              ) : (\n                <LightCard padding=\"45px 10px\">\n                  <AutoColumn gap=\"sm\" justify=\"center\">\n                    <Text textAlign=\"center\">{t('You don’t have liquidity in this pool yet.')}</Text>\n                    <StyledInternalLink to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}>\n                      <Text textAlign=\"center\">{t('Add Liquidity')}</Text>\n                    </StyledInternalLink>\n                  </AutoColumn>\n                </LightCard>\n              )\n            ) : validPairNoLiquidity ? (\n              <LightCard padding=\"45px 10px\">\n                <AutoColumn gap=\"sm\" justify=\"center\">\n                  <Text textAlign=\"center\">{t('No pool found.')}</Text>\n                  <StyledInternalLink to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}>\n                    {t('Create pool.')}\n                  </StyledInternalLink>\n                </AutoColumn>\n              </LightCard>\n            ) : pairState === PairState.INVALID ? (\n              <LightCard padding=\"45px 10px\">\n                <AutoColumn gap=\"sm\" justify=\"center\">\n                  <Text textAlign=\"center\" fontWeight={500}>\n                    {t('Invalid pair.')}\n                  </Text>\n                </AutoColumn>\n              </LightCard>\n            ) : pairState === PairState.LOADING ? (\n              <LightCard padding=\"45px 10px\">\n                <AutoColumn gap=\"sm\" justify=\"center\">\n                  <Text textAlign=\"center\">\n                    {t('Loading')}\n                    <Dots />\n                  </Text>\n                </AutoColumn>\n              </LightCard>\n            ) : null\n          ) : (\n            prerequisiteMessage\n          )}\n        </AutoColumn>\n\n        {/* <CurrencySearchModal\n          isOpen={showSearch}\n          onCurrencySelect={handleCurrencySelect}\n          onDismiss={handleSearchDismiss}\n          showCommonBases\n          selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\n        /> */}\n      </AppBody>\n    </Page>\n  )\n}\n"],"sourceRoot":""}