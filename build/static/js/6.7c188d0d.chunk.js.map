{"version":3,"sources":["../node_modules/lodash/isEqual.js","views/Profile/components/ApproveConfirmButtons.tsx","components/PageHeader/PageHeader.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx","hooks/useApproveConfirmTransaction.ts","views/FarmAuction/components/PlaceBidModal.tsx","views/FarmAuction/components/AuctionDetailsCard/AuctionSchedule.tsx","views/FarmAuction/components/AuctionDetailsCard/CannotBidMessage.tsx","config/constants/farmAuctions.ts","views/FarmAuction/hooks/useWhitelistedAddresses.ts","views/FarmAuction/components/WhitelistedBiddersModal.tsx","views/FarmAuction/components/WhitelistedBiddersButton.tsx","views/FarmAuction/components/AuctionDetailsCard/AuctionFooter.tsx","views/FarmAuction/components/AuctionDetailsCard/index.tsx","views/FarmAuction/components/TabToggle.tsx","../node_modules/date-fns/esm/add/index.js","../node_modules/date-fns/esm/hoursToSeconds/index.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/_lib/roundingMethods/index.js","../node_modules/date-fns/esm/differenceInHours/index.js","utils/types.ts","views/FarmAuction/helpers.tsx","views/FarmAuction/hooks/useAuctionHistory.tsx","views/FarmAuction/components/AuctionLeaderboard/AuctionLeaderboardTable.tsx","views/FarmAuction/components/AuctionHistory.tsx","../node_modules/date-fns/esm/differenceInSeconds/index.js","views/FarmAuction/components/AuctionLeaderboard/index.tsx","views/FarmAuction/components/AuctionLeaderboard/AuctionProgress.tsx","views/FarmAuction/components/AuctionLeaderboard/AuctionRibbon.tsx","utils/getTimePeriods.ts","views/FarmAuction/components/AuctionTimer.tsx","views/FarmAuction/hooks/useReclaimAuctionBid.ts","views/FarmAuction/components/ReclaimBidCard.tsx","views/FarmAuction/hooks/useCongratulateAuctionWinner.tsx","views/FarmAuction/components/CongratulationsCard.tsx","views/FarmAuction/index.tsx","views/FarmAuction/hooks/useCurrentFarmAuction.ts"],"names":["baseIsEqual","require","module","exports","value","other","ButtonArrangement","Outer","styled","Box","_templateObject","_taggedTemplateLiteral","_ref","theme","background","colors","gradients","bubblegum","Inner","Container","_templateObject2","PageHeader","_ref2","children","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","sharedStyles","clipPath","clipFill","css","isDark","dark","light","ConcaveContainer","ConvexContainer","_templateObject3","_ref3","_ref4","ConvexTop","_ref5","width","height","id","clipPathUnits","d","ConvexBottom","_ref6","ConcaveTop","_ref7","ConcaveBottom","_ref8","Wrapper","div","dividerFill","index","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","_jsxs","_Fragment","BackgroundColor","Flex","getPadding","ChildrenWrapper","mediaQueries","sm","lg","PageSection","svgFill","_ref6$index","_ref6$dividerPosition","_ref6$hasCurvedDivide","hasCurvedDivider","_ref6$concaveDivider","concaveDivider","containerProps","innerProps","initialState","approvalState","confirmState","reducer","state","actions","type","useApproveConfirmTransaction","onApprove","onConfirm","onRequiresApproval","_ref$onSuccess","onSuccess","noop","_ref$onApproveSuccess","onApproveSuccess","t","useTranslation","account","useWeb3React","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","handlePreApprove","useRef","toastError","useToast","useEffect","current","then","result","isApproving","isApproved","isConfirming","isConfirmed","handleApprove","_handleApprove","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tx","receipt","wrap","_context","prev","next","sent","wait","status","t0","stop","apply","arguments","handleConfirm","_handleConfirm","_callee2","_context2","StyledApproveConfirmButtonRow","md","Button","UIKitButton","iconAttrs","color","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","_templateObject4","spinnerIcon","AutoRenewIcon","spin","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","_ref5$buttonArrangeme","buttonArrangement","ROW","confirmLabel","confirmId","confirmButtonText","disabled","onClick","endIcon","undefined","isLoading","justifyContent","StyledModal","Modal","ExistingInfo","dropdown","InnerContent","PlaceBidModal","onDismiss","initialBidAmount","connectedBidder","refreshBidders","useTheme","callWithGasPrice","useCallWithGasPrice","_useState","useState","_useState2","bid","setBid","_useState3","_useState4","isMultipleOfTen","setIsMultipleOfTen","_useState5","_useState6","isMoreThanInitialBidAmount","setIsMoreThanInitialBidAmount","_useState7","_useState8","userNotEnoughCake","setUserNotEnoughCake","_useState9","_useState10","errorText","setErrorText","_useTokenBalance","useTokenBalance","getCakeAddress","userCake","balance","fetchStatus","userCakeBalance","getBalanceAmount","cakePriceBusd","usePriceCakeBusd","farmAuctionContract","useFarmAuctionContract","cakeContract","useCake","toastSuccess","bidderData","amount","position","isFirstBid","isZero","isInvalidFirstBid","parseFloat","FetchStatus","SUCCESS","lt","_useApproveConfirmTra","_onRequiresApproval","response","currentAllowance","allowance","address","ethersToBigNumber","abrupt","gt","ethers","constants","MaxUint256","_onApproveSuccess","ToastDescriptionWithTx","txHash","transactionHash","_x","bidAmount","BigNumber","times","DEFAULT_TOKEN_DECIMAL","toString","_onSuccess","_callee3","_context3","_x2","setPercentageValue","percentage","rounding","ROUND_FLOOR","ROUND_CEIL","valueToSet","integerValue","title","headerBackground","cardHeader","Text","num","getBalanceNumber","toLocaleString","concat","alignItems","pb","PancakeRoundIcon","mr","bold","small","BalanceInput","isWarning","placeholder","onUserInput","input","currencyValue","toNumber","mt","fontSize","formatNumber","textAlign","mb","scale","mx","p","variant","flexDirection","SEQUENTIAL","ConnectWalletButton","ScheduleInner","radii","default","cardBorder","AuctionSchedule","auction","startBlock","endBlock","auctionDuration","startDate","endDate","noLiveOrPendingAuction","AuctionStatus","ToBeAnnounced","Closed","textTransform","numHours","format","FarmSchedule","showForClosedAuction","farmStartBlock","farmEndBlock","farmStartDate","farmEndDate","scheduleToBeAnnounced","CannotBidMessage","_useTooltip","useTooltip","placement","tooltip","targetRef","tooltipVisible","ref","HelpIcon","getLpAddress","token","quoteToken","tokenAsToken","SDKToken","ChainId","MAINNET","quoteTokenAsToken","Pair","getAddress","whitelistedBidders","farmName","tokenAddress","tokens","wbnb","tokenName","projectSite","busd","map","bidderConfig","lpAddress","UNKNOWN_BIDDER","getBidderInfo","matchingBidder","find","bidder","toLowerCase","useWhitelistedAddresses","whitelistedAddresses","setWhitelistedAddresses","fetchWhitelistedAddresses","_yield$farmAuctionCon","_yield$farmAuctionCon2","bidderAddresses","bidders","viewBidders","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","console","error","InputContainer","AddressRowContainer","AddressRow","isMobile","href","target","rel","flex","truncateHash","OpenNewIcon","WhitelistedBiddersModal","searchTerm","setSearchTerm","useMatchBreakpoints","filteredBidders","filter","includes","modalContent","py","Spinner","px","Input","onChange","e","overflow","maxHeight","WhitelistedBiddersButton","_useModal","useModal","onShowWhitelistedBidders","length","Skeleton","FooterInner","AuctionFooter","isExpanded","setIsExpanded","topLeaderboard","isLiveOrPendingAuction","Pending","Open","CardFooter","pt","ExpandableLabel","expanded","AuctionDetailsCard","Card","AuctionDetails","onPresentPlaceBid","CardHeader","Heading","CardBody","cardTitle","notConnectedOrNotWhitelisted","isWhitelisted","whitelistedAndReadyToBid","_connectedBidder$bidd","Tag","outline","startIcon","CheckmarkCircleIcon","projectName","my","getBidSection","TabToggle","button","isActive","text","textSubtle","card","TabToggleGroup","add","dirtyDate","duration","requiredArgs","Date","NaN","years","toInteger","months","weeks","days","hours","minutes","seconds","date","toDate","dateWithMonths","addMonths","dateWithDays","addDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","getTime","hoursToSeconds","Math","floor","secondsInHour","differenceInMilliseconds","dateLeft","dateRight","roundingMap","ceil","round","trunc","getRoundingMethod","method","differenceInHours","options","diff","millisecondsInHour","roundingMethod","FarmAuctionContractStatus","sortAuctionBidders","sortedBidders","_toConsumableArray","sort","a","b","bidderInfo","adjustedPosition","unadjustedBidders","samePositionAsAbove","eq","isTopPosition","leaderboardThreshold","lte","getAuctionStatus","currentBlock","contractStatus","Close","Finished","getDateForBlock","block","secondsUntilStart","_yield$simpleRpcProvi","timestamp","BSC_BLOCK_TIME","simpleRpcProvider","getBlock","processAuctionData","auctionId","auctionResponse","processedAuctionData","blocksToFarmStartDate","farmDurationInBlocks","auctionStatus","leaderboard","getBlockNumber","_x3","_x4","processBidderAuctions","bidderAuctions","_bidderAuctions","auctionIds","bids","claimed","nextCursor","auctions","useAuctionHistory","auctionHistory","setAuctionHistory","fetchAuction","auctionData","auctionBidders","viewBidsPerAuction","AUCTION_BIDDERS_TO_FETCH","_defineProperty","LeaderboardContainer","GridCell","warning","LeaderboardRow","pl","pr","maximumFractionDigits","SubMenu","component","EllipsisIcon","SubMenuItem","as","LinkExternal","getBscScanLink","AuctionLeaderboardTable","noBidsText","visibleBidders","setVisibleBidders","totalBidders","BunnyPlaceholderIcon","slice","StyledIconButton","IconButton","textDisabled","AuctionHistory","mostRecentClosedAuctionId","historyAuctionId","setHistoryAuctionId","historyAuctionIdAsInt","parseInt","_useMatchBreakpoints","isXs","isSm","isMd","isLg","isXl","isXxl","isLargerScreen","isSmallerScreen","selectedAuction","Object","values","auctionTable","Number","isNaN","handleArrowPress","event","newAuctionId","ArrowBackIcon","ArrowForwardIcon","ArrowLastIcon","differenceInSeconds","Tabs","AuctionProgress","progress","setProgress","slowRefresh","useRefresh","now","percentagePassed","Progress","primaryStep","StyledRibbon","AuctionRibbon","noAuctionHistory","ribbonText","AuctionLeaderboardCard","getMostRecentClosedAuctionId","latestAuctionId","latestAuctionStatus","CurrentAuctionCard","Latest","activeTab","setActiveTab","Archive","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","delta","abs","timeLeft","AuctionCountDown","AuctionTimer","PocketWatchIcon","timerUntil","isAfter","timerTitle","secondsRemaining","_getTimePeriods","verticalAlign","lineHeight","currentCursor","nextAuctionToCheck","auctionToReclaim","loading","reclaimReducer","action","payload","useReclaimAuctionBid","fetchBidderAuctions","bidderAuctionsResponse","_processBidderAuction","viewBidderAuctions","RECLAIM_AUCTIONS_TO_FETCH","checkIfAuctionIsClaimable","auctionToCheck","accountBidderData","claimable","StyledReclaimBidCard","ReclaimBidCard","_useReclaimAuctionBid","_useReclaimAuctionBid2","reclaimableAuction","checkForNextReclaimableAuction","useCongratulateAuctionWinner","currentAuction","wonAuction","setWonAuction","checkIfWonPreviousAuction","previousAuctionId","winnerAddresses","CongratulationsCard","AuctionContainer","FarmAuction","_useCurrentFarmAuctio","setCurrentAuction","setBidders","setConnectedBidder","_useLastUpdated","useLastUpdated","lastUpdated","setLastUpdated","fastRefresh","fetchCurrentAuction","currentAuctionId","fetchBidders","currentAuctionBidders","checkAccount","whitelistedStatus","whitelisted","BIG_ZERO","getBidderData","isEqual","useCurrentFarmAuction","style","margin","bgDark","minWidth","AuctionLeaderboard"],"mappings":"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","file":"static/js/6.7c188d0d.chunk.js","sourcesContent":["var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@arborswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport enum ButtonArrangement {\n  ROW = 'row',\n  SEQUENTIAL = 'sequential',\n}\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n  buttonArrangement?: ButtonArrangement\n  confirmLabel?: string\n  confirmId?: string\n}\n\nconst StyledApproveConfirmButtonRow = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n  buttonArrangement = ButtonArrangement.ROW,\n  confirmLabel,\n  confirmId,\n}) => {\n  const { t } = useTranslation()\n  const confirmButtonText = confirmLabel ?? t('Confirm')\n\n  const ApproveConfirmRow = () => {\n    return (\n      <StyledApproveConfirmButtonRow>\n        <Box>\n          <Button\n            disabled={isApproveDisabled}\n            onClick={onApprove}\n            endIcon={isApproving ? spinnerIcon : undefined}\n            isLoading={isApproving}\n          >\n            {isApproving ? t('Enabling') : t('Enable')}\n          </Button>\n        </Box>\n        <Flex justifyContent=\"center\">\n          <ChevronRight />\n          <ChevronBottom />\n        </Flex>\n        <Box>\n          <Button\n            id={confirmId}\n            onClick={onConfirm}\n            disabled={isConfirmDisabled}\n            isLoading={isConfirming}\n            endIcon={isConfirming ? spinnerIcon : undefined}\n          >\n            {isConfirming ? t('Confirming') : confirmButtonText}\n          </Button>\n        </Box>\n      </StyledApproveConfirmButtonRow>\n    )\n  }\n\n  const ApproveConfirmSequential = () => {\n    return (\n      <>\n        {isApproveDisabled ? (\n          <Box>\n            <Button\n              id={confirmId}\n              onClick={onConfirm}\n              disabled={isConfirmDisabled}\n              isLoading={isConfirming}\n              endIcon={isConfirming ? spinnerIcon : undefined}\n            >\n              {isConfirming ? t('Confirming') : confirmButtonText}\n            </Button>\n          </Box>\n        ) : (\n          <Box>\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\n              {isApproving ? t('Enabling') : t('Enable')}\n            </Button>\n          </Box>\n        )}\n      </>\n    )\n  }\n\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\n}\n\nexport default ApproveConfirmButtons\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@arborswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { Box } from '@arborswap/uikit'\nimport { ClipFill } from '../types'\n\ninterface CurveProps {\n  clipFill?: ClipFill\n}\n\ninterface ContainerProps extends CurveProps {\n  clipPath: string\n}\n\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\n  width: 100%;\n  height: 20px;\n  clip-path: url(${clipPath});\n\n  background: ${() => {\n    if (theme.isDark) {\n      return clipFill?.dark || clipFill?.light || theme.colors.background\n    }\n    return clipFill?.light || theme.colors.background\n  }};\n\n  & svg {\n    display: block;\n  }\n`\n\nconst ConcaveContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\n`\n\nconst ConvexContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\n`\n\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\nimport { DividerFill, ClipFill } from './types'\n\ninterface CurvedDividerProps extends WrapperProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  dividerPosition?: 'top' | 'bottom'\n  concave?: boolean\n  clipFill?: ClipFill\n}\ninterface WrapperProps {\n  index: number\n  dividerFill?: DividerFill\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  background: ${({ theme, dividerFill }) => {\n    if (theme.isDark) {\n      return dividerFill?.dark || dividerFill?.light || 'none'\n    }\n    return dividerFill?.light || dividerFill?.dark || 'none'\n  }};\n  z-index: ${({ index }) => index};\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nconst ComponentWrapper = styled.div<WrapperProps>`\n  z-index: ${({ index }) => index + 1};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\n  index,\n  dividerPosition,\n  dividerComponent,\n  concave,\n  clipFill,\n  dividerFill,\n}) => {\n  const showConvexTop = dividerPosition === 'top' && !concave\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\n  const showConcaveTop = dividerPosition === 'top' && concave\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\n\n  const getConcaveDivider = () => {\n    return (\n      <>\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  const getConvexDivider = () => {\n    return (\n      <>\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  return (\n    <Wrapper index={index} dividerFill={dividerFill}>\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\n      {getConcaveDivider()}\n      {getConvexDivider()}\n    </Wrapper>\n  )\n}\n\nexport default CurvedDivider\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BoxProps, Box, Flex, FlexProps } from '@arborswap/uikit'\nimport Container from 'components/Layout/Container'\nimport CurvedDivider from './CurvedDivider'\nimport { ClipFill, DividerFill } from './types'\n\ninterface PageSectionProps extends BackgroundColorProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  hasCurvedDivider?: boolean\n  dividerPosition?: 'top' | 'bottom'\n  concaveDivider?: boolean\n  containerProps?: BoxProps\n  innerProps?: BoxProps\n  clipFill?: ClipFill\n  dividerFill?: DividerFill\n}\n\ninterface BackgroundColorProps extends FlexProps {\n  index: number\n  background?: string\n  getPadding?: () => string\n}\n\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  z-index: ${({ index }) => index - 1};\n  background: ${({ background, theme }) => background || theme.colors.background};\n  padding: ${({ getPadding }) => getPadding()};\n`\n\nconst ChildrenWrapper = styled(Container)`\n  min-height: auto;\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 48px;\n    padding-bottom: 48px;\n  }\n`\n\nconst PageSection: React.FC<PageSectionProps> = ({\n  children,\n  background,\n  svgFill,\n  index = 1,\n  dividerComponent,\n  dividerPosition = 'bottom',\n  hasCurvedDivider = true,\n  concaveDivider = false,\n  clipFill,\n  dividerFill,\n  containerProps,\n  innerProps,\n  ...props\n}) => {\n  const getPadding = () => {\n    // No curved divider\n    if (!hasCurvedDivider) {\n      return '48px 0'\n    }\n    // Bottom curved divider\n    // Less bottom padding, as the divider is present there\n    if (dividerPosition === 'bottom') {\n      return '48px 0 14px'\n    }\n    // Top curved divider\n    // Less top padding, as the divider is present there\n    if (dividerPosition === 'top') {\n      return '14px 0 48px'\n    }\n    return '48px 0'\n  }\n\n  return (\n    <Box {...containerProps}>\n      {hasCurvedDivider && dividerPosition === 'top' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\n      </BackgroundColor>\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default PageSection\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt' }\n  | { type: 'approve_error' }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt' }\n  | { type: 'confirm_error' }\n\ninterface State {\n  approvalState: LoadingState\n  confirmState: LoadingState\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  confirmState: 'idle',\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n      }\n    default:\n      return state\n  }\n}\n\ninterface OnSuccessProps {\n  state: State\n  receipt: ethers.providers.TransactionReceipt\n}\n\ninterface ApproveConfirmTransaction {\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\n  onConfirm: () => Promise<ethers.providers.TransactionResponse>\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: ({ state, receipt }: OnSuccessProps) => void\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n  onApproveSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    handleApprove: async () => {\n      try {\n        const tx = await onApprove()\n        dispatch({ type: 'approve_sending' })\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt' })\n          onApproveSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handleConfirm: async () => {\n      dispatch({ type: 'confirm_sending' })\n      try {\n        const tx = await onConfirm()\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'confirm_receipt' })\n          onSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'confirm_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { Modal, Text, Flex, BalanceInput, Box, Button, PancakeRoundIcon } from '@arborswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { formatNumber, getBalanceAmount, getBalanceNumber } from 'utils/formatBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { ethersToBigNumber } from 'utils/bigNumber'\nimport useTheme from 'hooks/useTheme'\nimport useTokenBalance, { FetchStatus } from 'hooks/useTokenBalance'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useFarmAuctionContract } from 'hooks/useContract'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport useToast from 'hooks/useToast'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport ApproveConfirmButtons, { ButtonArrangement } from 'views/Profile/components/ApproveConfirmButtons'\nimport { ConnectedBidder } from 'config/constants/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n  & > div:nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ExistingInfo = styled(Box)`\n  padding: 24px;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst InnerContent = styled(Box)`\n  padding: 24px;\n`\n\ninterface PlaceBidModalProps {\n  onDismiss?: () => void\n  // undefined initialBidAmount is passed only if auction is not loaded\n  // in this case modal will not be possible to open\n  initialBidAmount?: number\n  connectedBidder: ConnectedBidder\n  refreshBidders: () => void\n}\n\nconst PlaceBidModal: React.FC<PlaceBidModalProps> = ({\n  onDismiss,\n  initialBidAmount,\n  connectedBidder,\n  refreshBidders,\n}) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const [bid, setBid] = useState('')\n  const [isMultipleOfTen, setIsMultipleOfTen] = useState(false)\n  const [isMoreThanInitialBidAmount, setIsMoreThanInitialBidAmount] = useState(false)\n  const [userNotEnoughCake, setUserNotEnoughCake] = useState(false)\n  const [errorText, setErrorText] = useState(null)\n\n  const { balance: userCake, fetchStatus } = useTokenBalance(getCakeAddress())\n  const userCakeBalance = getBalanceAmount(userCake)\n\n  const cakePriceBusd = usePriceCakeBusd()\n  const farmAuctionContract = useFarmAuctionContract()\n  const cakeContract = useCake()\n\n  const { toastSuccess } = useToast()\n\n  const { bidderData } = connectedBidder\n  const { amount, position } = bidderData\n  const isFirstBid = amount.isZero()\n  const isInvalidFirstBid = isFirstBid && !isMoreThanInitialBidAmount\n\n  useEffect(() => {\n    setIsMoreThanInitialBidAmount(parseFloat(bid) >= initialBidAmount)\n    setIsMultipleOfTen(parseFloat(bid) % 10 === 0 && parseFloat(bid) !== 0)\n    if (fetchStatus === FetchStatus.SUCCESS && userCakeBalance.lt(bid)) {\n      setUserNotEnoughCake(true)\n    } else {\n      setUserNotEnoughCake(false)\n    }\n  }, [bid, initialBidAmount, fetchStatus, userCakeBalance])\n\n  useEffect(() => {\n    if (userNotEnoughCake) {\n      setErrorText(t('Insufficient CAKE balance'))\n    } else if (!isMoreThanInitialBidAmount && isFirstBid) {\n      setErrorText(t('First bid must be %initialBidAmount% CAKE or more.', { initialBidAmount }))\n    } else if (!isMultipleOfTen) {\n      setErrorText(t('Bid must be a multiple of 10'))\n    } else {\n      setErrorText(null)\n    }\n  }, [isMultipleOfTen, isMoreThanInitialBidAmount, userNotEnoughCake, initialBidAmount, t, isFirstBid])\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        try {\n          const response = await cakeContract.allowance(account, farmAuctionContract.address)\n          const currentAllowance = ethersToBigNumber(response)\n          return currentAllowance.gt(0)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return callWithGasPrice(cakeContract, 'approve', [farmAuctionContract.address, ethers.constants.MaxUint256])\n      },\n      onApproveSuccess: async ({ receipt }) => {\n        toastSuccess(\n          t('Contract approved - you can now place your bid!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash} />,\n        )\n      },\n      onConfirm: () => {\n        const bidAmount = new BigNumber(bid).times(DEFAULT_TOKEN_DECIMAL).toString()\n        return callWithGasPrice(farmAuctionContract, 'bid', [bidAmount])\n      },\n      onSuccess: async ({ receipt }) => {\n        refreshBidders()\n        onDismiss()\n        toastSuccess(t('Bid placed!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      },\n    })\n\n  const handleInputChange = (input: string) => {\n    setBid(input)\n  }\n\n  const setPercentageValue = (percentage: number) => {\n    const rounding = percentage === 1 ? BigNumber.ROUND_FLOOR : BigNumber.ROUND_CEIL\n    const valueToSet = getBalanceAmount(userCake.times(percentage)).div(10).integerValue(rounding).times(10)\n    setBid(valueToSet.toString())\n  }\n  return (\n    <StyledModal title={t('Place a Bid')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      <ExistingInfo>\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Your existing bid')}</Text>\n          <Text>{t('%num% CAKE', { num: getBalanceNumber(amount).toLocaleString() })}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Your position')}</Text>\n          <Text>{position ? `#${position}` : '-'}</Text>\n        </Flex>\n      </ExistingInfo>\n      <InnerContent>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" pb=\"8px\">\n          <Text>{t('Bid a multiple of 10')}</Text>\n          <Flex>\n            <PancakeRoundIcon width=\"24px\" height=\"24px\" mr=\"4px\" />\n            <Text bold>CAKE</Text>\n          </Flex>\n        </Flex>\n        {isFirstBid && (\n          <Text pb=\"8px\" small>\n            {t('First bid must be %initialBidAmount% CAKE or more.', { initialBidAmount })}\n          </Text>\n        )}\n        <BalanceInput\n          isWarning={!isMultipleOfTen || isInvalidFirstBid}\n          placeholder=\"0\"\n          value={bid}\n          onUserInput={handleInputChange}\n          currencyValue={\n            cakePriceBusd.gt(0) &&\n            `~${bid ? cakePriceBusd.times(new BigNumber(bid)).toNumber().toLocaleString() : '0.00'} USD`\n          }\n        />\n        <Flex justifyContent=\"flex-end\" mt=\"8px\">\n          <Text fontSize=\"12px\" color=\"textSubtle\" mr=\"8px\">\n            {t('Balance')}:\n          </Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {formatNumber(userCakeBalance.toNumber(), 3, 3)}\n          </Text>\n        </Flex>\n        {errorText && (\n          <Text color=\"failure\" textAlign=\"right\" fontSize=\"12px\">\n            {errorText}\n          </Text>\n        )}\n        <Flex justifyContent=\"space-between\" mt=\"8px\" mb=\"24px\">\n          <Button\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\n            scale=\"xs\"\n            mx=\"2px\"\n            p=\"4px 16px\"\n            variant=\"tertiary\"\n            onClick={() => setPercentageValue(0.25)}\n          >\n            25%\n          </Button>\n          <Button\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\n            scale=\"xs\"\n            mx=\"2px\"\n            p=\"4px 16px\"\n            variant=\"tertiary\"\n            onClick={() => setPercentageValue(0.5)}\n          >\n            50%\n          </Button>\n          <Button\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\n            scale=\"xs\"\n            mx=\"2px\"\n            p=\"4px 16px\"\n            variant=\"tertiary\"\n            onClick={() => setPercentageValue(0.75)}\n          >\n            75%\n          </Button>\n          <Button\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\n            scale=\"xs\"\n            mx=\"2px\"\n            p=\"4px 16px\"\n            variant=\"tertiary\"\n            onClick={() => setPercentageValue(1)}\n          >\n            MAX\n          </Button>\n        </Flex>\n        <Flex flexDirection=\"column\">\n          {account ? (\n            <ApproveConfirmButtons\n              isApproveDisabled={isApproved}\n              isApproving={isApproving}\n              isConfirmDisabled={\n                !isMultipleOfTen ||\n                getBalanceAmount(userCake).lt(bid) ||\n                isConfirmed ||\n                isInvalidFirstBid ||\n                userNotEnoughCake\n              }\n              isConfirming={isConfirming}\n              onApprove={handleApprove}\n              onConfirm={handleConfirm}\n              buttonArrangement={ButtonArrangement.SEQUENTIAL}\n            />\n          ) : (\n            <ConnectWalletButton />\n          )}\n        </Flex>\n        <Text color=\"textSubtle\" small mt=\"24px\">\n          {t('If your bid is unsuccessful, you’ll be able to reclaim your CAKE after the auction.')}\n        </Text>\n      </InnerContent>\n    </StyledModal>\n  )\n}\n\nexport default PlaceBidModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\nimport { Text, Flex, Box } from '@arborswap/uikit'\nimport { Auction, AuctionStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ScheduleInner = styled(Flex)`\n  flex-direction: column;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background-color: ${({ theme }) => theme.colors.background};\n  border: 1px ${({ theme }) => theme.colors.cardBorder} solid;\n`\n\ninterface ScheduleProps {\n  auction: Auction\n  showForClosedAuction?: boolean\n}\n\nexport const AuctionSchedule: React.FC<ScheduleProps> = ({ auction }) => {\n  const { startBlock, endBlock, auctionDuration, startDate, endDate, status } = auction\n  const { t } = useTranslation()\n\n  const noLiveOrPendingAuction = status === AuctionStatus.ToBeAnnounced || status === AuctionStatus.Closed\n\n  return (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"8px\">\n        {t('Auction Schedule')}\n      </Text>\n      <ScheduleInner>\n        {!noLiveOrPendingAuction && (\n          <Flex justifyContent=\"space-between\" mb=\"8px\">\n            <Text small color=\"textSubtle\">\n              {t('Auction duration')}\n            </Text>\n            <Text small>{t('%numHours% hours', { numHours: `~${auctionDuration.toString()}` })}</Text>\n          </Flex>\n        )}\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text small color=\"textSubtle\">\n            {t('Start')}\n          </Text>\n          {noLiveOrPendingAuction ? (\n            <Text small>{t('To be announced')}</Text>\n          ) : (\n            <Box>\n              <Text small>{format(startDate, 'MMMM dd yyyy hh:mm aa')}</Text>\n              <Text small textAlign=\"right\">\n                {t('Block %num%', { num: startBlock })}\n              </Text>\n            </Box>\n          )}\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text small color=\"textSubtle\">\n            {t('End')}\n          </Text>\n          {noLiveOrPendingAuction ? (\n            <Text small>{t('To be announced')}</Text>\n          ) : (\n            <Box>\n              <Text small>{format(endDate, 'MMMM dd yyyy hh:mm aa')}</Text>\n              <Text small textAlign=\"right\">\n                {t('Block %num%', { num: endBlock })}\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      </ScheduleInner>\n    </>\n  )\n}\n\nexport const FarmSchedule: React.FC<ScheduleProps> = ({ auction, showForClosedAuction }) => {\n  const { status, farmStartBlock, farmEndBlock, farmStartDate, farmEndDate } = auction\n  const { t } = useTranslation()\n\n  let scheduleToBeAnnounced = status === AuctionStatus.ToBeAnnounced || status === AuctionStatus.Closed\n  // Schedule for closed auction is shown in congratulation card but not shown in Next Auction card\n  if (showForClosedAuction) {\n    scheduleToBeAnnounced = false\n  }\n\n  return (\n    <Flex flexDirection=\"column\" mt=\"24px\">\n      <Text textTransform=\"uppercase\" color=\"secondary\" bold fontSize=\"12px\" mb=\"8px\">\n        {t('Farm schedule')}\n      </Text>\n      <ScheduleInner>\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text small color=\"textSubtle\">\n            {t('Farm duration')}\n          </Text>\n          <Text small>{t('%num% days', { num: 7 })}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text small color=\"textSubtle\">\n            {t('Start')}\n          </Text>\n          {scheduleToBeAnnounced ? (\n            <Text small>{t('To be announced')}</Text>\n          ) : (\n            <Box>\n              <Text small>{format(farmStartDate, 'MMMM dd yyyy hh:mm aa')}</Text>\n              <Text small textAlign=\"right\">\n                {t('Block %num%', { num: farmStartBlock })}\n              </Text>\n            </Box>\n          )}\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text small color=\"textSubtle\">\n            {t('End')}\n          </Text>\n          {scheduleToBeAnnounced ? (\n            <Text small>{t('To be announced')}</Text>\n          ) : (\n            <Box>\n              <Text small>{format(farmEndDate, 'MMMM dd yyyy hh:mm aa')}</Text>\n              <Text small textAlign=\"right\">\n                {t('Block %num%', { num: farmEndBlock })}\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      </ScheduleInner>\n    </Flex>\n  )\n}\n","import React from 'react'\nimport { Text, Flex, HelpIcon, useTooltip } from '@arborswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CannotBidMessage: React.FC = () => {\n  const { t } = useTranslation()\n  const { tooltip, targetRef, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"16px\">{t('Only whitelisted project wallets can bid in the auction to create Community Farms.')}</Text>\n      <Text mb=\"16px\">{t('Bidding is only possible while the auction is live.')}</Text>\n      <Text>\n        {t(\n          'If you’re sure your project should be able to bid in this auction, make sure you’re connected with the correct (whitelisted) wallet.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom' },\n  )\n  return (\n    <Flex justifyContent=\"center\" alignItems=\"center\">\n      <Text color=\"textSubtle\" small mr=\"8px\">\n        {t('Why cant I bid for a farm?')}\n      </Text>\n      <span ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" height=\"16px\" width=\"16px\" />\n      </span>\n      {tooltipVisible && tooltip}\n    </Flex>\n  )\n}\n\nexport default CannotBidMessage\n","import { Token as SDKToken, Pair, ChainId } from '@arborswap/sdk'\nimport tokens from './tokens'\nimport { FarmAuctionBidderConfig, Token } from './types'\n\nconst getLpAddress = (token: string, quoteToken: Token) => {\n  const tokenAsToken = new SDKToken(ChainId.MAINNET, token, 18)\n  const quoteTokenAsToken = new SDKToken(ChainId.MAINNET, quoteToken.address[56], 18)\n  return Pair.getAddress(tokenAsToken, quoteTokenAsToken)\n}\n\nexport const whitelistedBidders: FarmAuctionBidderConfig[] = [\n  {\n    account: '0x9Ed5a62535A5Dd2dB2d9bB21bAc42035Af47F630',\n    farmName: 'NAV-RBA',\n    tokenAddress: '0xbfef6ccfc830d3baca4f6766a0d4aaa242ca9f3d',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Navcoin',\n    projectSite: 'https://navcoin.org/en',\n  },\n  {\n    account: '0x33723811B0FCa2a751f3912B80603Fe11499D894',\n    farmName: 'WSG-RBA',\n    tokenAddress: '0xa58950f05fea2277d2608748412bf9f802ea4901',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Wall Street Games',\n    projectSite: 'https://wsg.gg/',\n  },\n  {\n    account: '0xD1C35C3F5D9d373A3F7c0668Fbe75801886e060f',\n    farmName: 'SWIRGE-RBA',\n    tokenAddress: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Swirge Network',\n    projectSite: 'https://swirge.com/',\n  },\n  {\n    account: '0x58092273a044D6e1d23B5095AE873F6E24E906ed',\n    farmName: 'rUSD-BUSD',\n    tokenAddress: '0x07663837218a003e66310a01596af4bf4e44623d',\n    quoteToken: tokens.busd,\n    tokenName: 'RAMP DEFI',\n    projectSite: 'https://www.rampdefi.com/',\n  },\n  {\n    account: '0xfAd3B5FeAC1aAF86B3f66D105F2fa9607164D86b',\n    farmName: 'FEED-RBA',\n    tokenAddress: '0x67d66e8Ec1Fd25d98B3Ccd3B19B7dc4b4b7fC493',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Feeder Finance',\n    projectSite: 'https://www.feeder.finance/',\n  },\n  {\n    account: '0x6a2d41c87c3F28C2C0b466424DE8e08FC2E23eDc',\n    farmName: 'BBT-RBA',\n    tokenAddress: '0xd48474e7444727bf500a32d5abe01943f3a59a64',\n    quoteToken: tokens.wbnb,\n    tokenName: 'BitBook',\n    projectSite: 'https://www.bitbook.network/',\n  },\n  {\n    account: '0xAe126B90d2835c5A2D720b0687EC59f59b768183',\n    farmName: 'WOW-BUSD',\n    tokenAddress: '0x4da996c5fe84755c80e108cf96fe705174c5e36a',\n    quoteToken: tokens.busd,\n    tokenName: 'WOWswap',\n    projectSite: 'https://wowswap.io/',\n  },\n  {\n    account: '0x88F0A6cb89909838d69E4E6e76eC21e2a7bdcA66',\n    farmName: 'BREW-RBA',\n    tokenAddress: '0x790be81c3ca0e53974be2688cdb954732c9862e1',\n    quoteToken: tokens.wbnb,\n    tokenName: 'CafeSwap Finance',\n    projectSite: 'https://app.cafeswap.finance/',\n  },\n  {\n    account: '0x0Cf86283ad1a1B7D04669696eD13BAE3d5925a0a',\n    farmName: 'SAKE-RBA',\n    tokenAddress: '0x8bd778b12b15416359a227f0533ce2d91844e1ed',\n    quoteToken: tokens.wbnb,\n    tokenName: 'SakeSwap',\n    projectSite: 'https://bsc.sakeswap.finance/',\n  },\n  {\n    account: '0xCe059E8af96a654d4afe630Fa325FBF70043Ab11',\n    farmName: 'XBLZD-RBA',\n    tokenAddress: '0x9a946c3cb16c08334b69ae249690c236ebd5583e',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Blizzard',\n    projectSite: 'https://www.blizzard.money/',\n  },\n  {\n    account: '0x7A4BAE68836f486e2c99dca0fBda1845d4532194',\n    farmName: 'HERO-RBA',\n    tokenAddress: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Metahero',\n    projectSite: 'https://metahero.io/',\n  },\n  {\n    account: '0x46D8e47b9A6487FDAB0a700b269A452cFeED49Aa',\n    farmName: 'MCRN-RBA',\n    tokenAddress: '0xacb2d47827c9813ae26de80965845d80935afd0b',\n    quoteToken: tokens.wbnb,\n    tokenName: 'MacaronSwap',\n    projectSite: 'https://www.macaronswap.finance/',\n  },\n  {\n    account: '0x1bA962acab22Be9e49C4cEBE7710c9201A72dFcc',\n    farmName: 'BABYCAKE-RBA',\n    tokenAddress: '0xdb8d30b74bf098af214e862c90e647bbb1fcc58c',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Babycake',\n    projectSite: 'https://babycake.app/',\n  },\n  {\n    account: '0xCCcC0b22799E82A79007814Dbc6A194410DCcEA5',\n    farmName: 'BMON-RBA',\n    tokenAddress: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Binamon',\n    projectSite: 'https://binamon.org/',\n  },\n  {\n    account: '0x6cfA3ff4e96abe93a290dc3d7A911A483C194758',\n    farmName: 'ANY-RBA',\n    tokenAddress: '0xf68c9df95a18b2a5a5fa1124d79eeeffbad0b6fa',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Anyswap',\n    projectSite: 'https://anyswap.exchange/',\n  },\n  {\n    account: '0xe596470D291Cb2D32ec111afC314B07006690c72',\n    farmName: 'PHX-RBA',\n    tokenAddress: '0xac86e5f9bA48d680516df50C72928c2ec50F3025',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Phoenix Finance',\n    projectSite: 'https://www.phoenixprotocol.net/',\n  },\n  {\n    account: '0x8f8c77987C0ea9dd2400383b623d9cbcBbAf98CF',\n    farmName: 'GMR-RBA',\n    tokenAddress: '0x0523215dcafbf4e4aa92117d13c6985a3bef27d7',\n    quoteToken: tokens.wbnb,\n    tokenName: 'GMR Finance',\n    projectSite: 'https://www.gmr.finance/',\n  },\n  {\n    account: '0x786B313b01A25eddbF7f7461b48D60AF680d758C',\n    farmName: 'BP-RBA',\n    tokenAddress: '0xacb8f52dc63bb752a51186d1c55868adbffee9c1',\n    quoteToken: tokens.wbnb,\n    tokenName: 'BunnyPark',\n    projectSite: 'https://www.bunnypark.com/',\n  },\n  {\n    account: '0x70d7eCEE276Ad5fDFc91B3C30d2c1cDb9dD442Fb',\n    farmName: 'DPET-RBA',\n    tokenAddress: '0xfb62ae373aca027177d1c18ee0862817f9080d08',\n    quoteToken: tokens.wbnb,\n    tokenName: 'MyDefiPet',\n    projectSite: 'https://mydefipet.com/',\n  },\n  {\n    account: '0x8aC06b55C9812e3E574CF5A5F3b49619dF33099C',\n    farmName: 'NMX-BUSD',\n    tokenAddress: '0xd32d01a43c869edcd1117c640fbdcfcfd97d9d65',\n    quoteToken: tokens.busd,\n    tokenName: 'Nominex',\n    projectSite: 'https://nominex.io/',\n  },\n  {\n    account: '0xd27E57Ff5dD3d78B03c85e2A2bB8dc37E67c5140',\n    farmName: 'POOLZ-RBA',\n    tokenAddress: '0x77018282fd033daf370337a5367e62d8811bc885',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Poolz Finance',\n    projectSite: 'https://poolz.finance/',\n  },\n  {\n    account: '0x0767a2f9c644b364Bc88Eea5a535afE506Ba6802',\n    farmName: 'ODDZ-RBA',\n    tokenAddress: '0xcd40f2670cf58720b694968698a5514e924f742d',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Oddz Finance',\n    projectSite: 'https://oddz.fi',\n  },\n  {\n    account: '0x2B6b2701d7F7b65BA2E1ec2d2dAa17d46B85A4fe',\n    farmName: 'UBXT-BUSD',\n    tokenAddress: '0xbbeb90cfb6fafa1f69aa130b7341089abeef5811',\n    quoteToken: tokens.busd,\n    tokenName: 'UpBots',\n    projectSite: 'https://upbots.com/',\n  },\n  {\n    account: '0x875831249bA511a6f1E49c84D66E1A6F5601f7C6',\n    farmName: 'DND-BUSD',\n    tokenAddress: '0x14c358b573a4cE45364a3DBD84BBb4Dae87af034',\n    quoteToken: tokens.busd,\n    tokenName: 'DungeonSwap',\n    projectSite: 'https://dungeonswap.app/',\n  },\n  {\n    account: '0xb7d303BbaE2573513801C5F94aE0B61Fa5b3426F',\n    farmName: 'ZOON-RBA',\n    tokenAddress: '0x9d173e6c594f479b4d47001f8e6a95a7adda42bc',\n    quoteToken: tokens.wbnb,\n    tokenName: 'CryptoZoon',\n    projectSite: 'https://cryptozoon.io/',\n  },\n  {\n    account: '0x22d56946c6cc1d4ed09f02858ddb990fcc981c55',\n    farmName: 'HGET-BUSD',\n    tokenAddress: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\n    quoteToken: tokens.busd,\n    tokenName: 'Hedget',\n    projectSite: 'https://www.hedget.com/',\n  },\n  {\n    account: '0x027D50F36fe3b64630170B3ba82FC64BfC9bc088',\n    farmName: 'FAN-RBA',\n    tokenAddress: '0xFAc3A1ED2480Da8F5c34576C0Da13F245239717d',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Fanadise',\n    projectSite: 'https://fanadise.com/',\n  },\n  {\n    account: '0x73f9eb8eB7109b171396C8cbffcb29839c8b3064',\n    farmName: 'PKMON-BUSD',\n    tokenAddress: '0x609d183fb91a0fce59550b62ab7d2c931b0bb1be',\n    quoteToken: tokens.busd,\n    tokenName: 'PolkaMonster',\n    projectSite: 'https://polkamonster.game/',\n  },\n  {\n    account: '0x88Dba2cF8911A80cc50A1B392b5fF6b47B930330',\n    farmName: 'SFUND-RBA',\n    tokenAddress: '0x477bc8d23c634c154061869478bce96be6045d12',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Seedify',\n    projectSite: 'https://launchpad.seedify.fund/',\n  },\n  {\n    account: '0xf1dD352EF3a94F60b3047B607C2Bd976401F538c',\n    farmName: 'GNT-RBA',\n    tokenAddress: '0xf750a26eb0acf95556e8529e72ed530f3b60f348',\n    quoteToken: tokens.wbnb,\n    tokenName: 'GreenTrust',\n    projectSite: 'https://www.greentrusttoken.com/',\n  },\n].map((bidderConfig) => ({\n  ...bidderConfig,\n  lpAddress: getLpAddress(bidderConfig.tokenAddress, bidderConfig.quoteToken),\n}))\n\nconst UNKNOWN_BIDDER: FarmAuctionBidderConfig = {\n  account: '',\n  tokenAddress: '',\n  quoteToken: tokens.wbnb,\n  farmName: 'Unknown',\n  tokenName: 'Unknown',\n}\n\nexport const getBidderInfo = (account: string): FarmAuctionBidderConfig => {\n  const matchingBidder = whitelistedBidders.find((bidder) => bidder.account.toLowerCase() === account.toLowerCase())\n  if (matchingBidder) {\n    return matchingBidder\n  }\n  return { ...UNKNOWN_BIDDER, account }\n}\n","import { useState, useEffect } from 'react'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { getBidderInfo } from 'config/constants/farmAuctions'\nimport { FarmAuctionBidderConfig } from 'config/constants/types'\nimport { AUCTION_WHITELISTED_BIDDERS_TO_FETCH } from 'config'\n\nconst useWhitelistedAddresses = () => {\n  const [whitelistedAddresses, setWhitelistedAddresses] = useState<FarmAuctionBidderConfig[] | null>(null)\n  const farmAuctionContract = useFarmAuctionContract()\n\n  useEffect(() => {\n    const fetchWhitelistedAddresses = async () => {\n      try {\n        const [bidderAddresses] = await farmAuctionContract.viewBidders(0, AUCTION_WHITELISTED_BIDDERS_TO_FETCH)\n        const bidders = bidderAddresses.map((address) => getBidderInfo(address))\n        setWhitelistedAddresses(bidders)\n      } catch (error) {\n        console.error('Failed to fetch list of whitelisted addresses', error)\n      }\n    }\n    if (!whitelistedAddresses) {\n      fetchWhitelistedAddresses()\n    }\n  }, [farmAuctionContract, whitelistedAddresses])\n\n  return whitelistedAddresses\n}\n\nexport default useWhitelistedAddresses\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Box, Text, Flex, Input, OpenNewIcon, useMatchBreakpoints, Spinner } from '@arborswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { FarmAuctionBidderConfig } from 'config/constants/types'\nimport truncateHash from 'utils/truncateHash'\nimport useWhitelistedAddresses from '../hooks/useWhitelistedAddresses'\n\ninterface WhitelistedBiddersModalProps {\n  onDismiss?: () => void\n}\n\nconst StyledModal = styled(Modal)`\n  & > div:nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst InputContainer = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AddressRowContainer = styled.div`\n  display: grid;\n  grid-template-columns: 3fr 5fr 0.5fr;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 8px 24px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n`\n\nconst AddressRow: React.FC<{ bidder: FarmAuctionBidderConfig; isMobile: boolean }> = ({ bidder, isMobile }) => {\n  const { farmName, tokenName, account, projectSite } = bidder\n  return (\n    <a href={projectSite} target=\"_blank\" rel=\"noopener noreferrer\">\n      <AddressRowContainer>\n        <Flex flexDirection=\"column\" flex=\"3\">\n          <Text>{farmName}</Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {tokenName}\n          </Text>\n        </Flex>\n        <Flex justifyContent={['center', null, 'flex-start']} alignItems=\"center\" flex=\"6\">\n          <Text mr=\"8px\">{isMobile ? truncateHash(account) : account}</Text>\n        </Flex>\n        <OpenNewIcon color=\"primary\" />\n      </AddressRowContainer>\n    </a>\n  )\n}\n\nconst WhitelistedBiddersModal: React.FC<WhitelistedBiddersModalProps> = ({ onDismiss }) => {\n  const [searchTerm, setSearchTerm] = useState('')\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { isMobile } = useMatchBreakpoints()\n  const bidders = useWhitelistedAddresses()\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value)\n  }\n\n  const filteredBidders = bidders\n    ? bidders.filter(\n        ({ farmName, tokenName, account }) =>\n          farmName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          tokenName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          account.toLowerCase().includes(searchTerm.toLowerCase()),\n      )\n    : []\n\n  const modalContent = bidders ? (\n    filteredBidders.map((bidder) => <AddressRow key={bidder.account} bidder={bidder} isMobile={isMobile} />)\n  ) : (\n    <Flex justifyContent=\"center\" alignItems=\"center\" py=\"24px\">\n      <Spinner />\n    </Flex>\n  )\n\n  return (\n    <StyledModal\n      p=\"0\"\n      title={t('All Whitelisted Project Wallets')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <InputContainer py=\"16px\" px=\"24px\">\n        <Input placeholder={t('Search address or token')} value={searchTerm} onChange={handleSearchChange} />\n      </InputContainer>\n\n      <Box pb=\"24px\" overflow=\"scroll\" maxHeight=\"245px\">\n        {modalContent}\n      </Box>\n    </StyledModal>\n  )\n}\n\nexport default WhitelistedBiddersModal\n","import React from 'react'\nimport { useModal, Button, Skeleton } from '@arborswap/uikit'\nimport WhitelistedBiddersModal from './WhitelistedBiddersModal'\nimport useWhitelistedAddresses from '../hooks/useWhitelistedAddresses'\n\nconst WhitelistedBiddersButton: React.FC = () => {\n  const whitelistedBidders = useWhitelistedAddresses()\n  const [onShowWhitelistedBidders] = useModal(<WhitelistedBiddersModal />)\n\n  return whitelistedBidders ? (\n    <Button p=\"0\" variant=\"text\" scale=\"sm\" onClick={onShowWhitelistedBidders}>\n      {whitelistedBidders.length}\n    </Button>\n  ) : (\n    <Skeleton height=\"24px\" width=\"46px\" />\n  )\n}\n\nexport default WhitelistedBiddersButton\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Box, CardFooter, ExpandableLabel } from '@arborswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\nimport { FarmSchedule } from './AuctionSchedule'\nimport WhitelistedBiddersButton from '../WhitelistedBiddersButton'\n\nconst FooterInner = styled(Box)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst AuctionFooter: React.FC<{ auction: Auction }> = ({ auction }) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const { topLeaderboard, status } = auction\n\n  const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n\n  return (\n    <CardFooter p=\"0\">\n      {isExpanded && (\n        <FooterInner>\n          <Flex p=\"16px\" flexDirection=\"column\">\n            {isLiveOrPendingAuction && (\n              <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\n                <Text color=\"textSubtle\">{t('Farms available')}</Text>\n                <Text>\n                  {topLeaderboard} ({t('top %num% bidders', { num: topLeaderboard })})\n                </Text>\n              </Flex>\n            )}\n            <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Text color=\"textSubtle\">{t('Multiplier per farm')}</Text>\n              <Text>1x {t('each')}</Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Text color=\"textSubtle\">{t('Total whitelisted bidders')}</Text>\n              <WhitelistedBiddersButton />\n            </Flex>\n            <FarmSchedule auction={auction} />\n          </Flex>\n        </FooterInner>\n      )}\n      <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </Flex>\n    </CardFooter>\n  )\n}\n\nexport default AuctionFooter\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  Text,\n  Heading,\n  Card,\n  CardHeader,\n  CardBody,\n  Flex,\n  Spinner,\n  Skeleton,\n  Tag,\n  Button,\n  CheckmarkCircleIcon,\n  useModal,\n} from '@arborswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus, ConnectedBidder } from 'config/constants/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport PlaceBidModal from '../PlaceBidModal'\nimport { AuctionSchedule } from './AuctionSchedule'\nimport CannotBidMessage from './CannotBidMessage'\nimport AuctionFooter from './AuctionFooter'\n\nconst AuctionDetailsCard = styled(Card)`\n  flex: 1;\n`\n\ninterface AuctionDetailsProps {\n  auction: Auction\n  connectedBidder: ConnectedBidder\n  refreshBidders: () => void\n}\n\nconst AuctionDetails: React.FC<AuctionDetailsProps> = ({ auction, connectedBidder, refreshBidders }) => {\n  const { t } = useTranslation()\n\n  const [onPresentPlaceBid] = useModal(\n    <PlaceBidModal\n      connectedBidder={connectedBidder}\n      refreshBidders={refreshBidders}\n      initialBidAmount={auction?.initialBidAmount}\n    />,\n  )\n\n  if (!auction) {\n    return (\n      <AuctionDetailsCard mb={['24px', null, null, '0']}>\n        <CardHeader>\n          <Heading>{t('Current Auction')}</Heading>\n        </CardHeader>\n        <CardBody>\n          <Flex justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n            <Spinner />\n          </Flex>\n        </CardBody>\n      </AuctionDetailsCard>\n    )\n  }\n\n  const getBidSection = () => {\n    const notConnectedOrNotWhitelisted = !connectedBidder || (connectedBidder && !connectedBidder.isWhitelisted)\n    const whitelistedAndReadyToBid = !notConnectedOrNotWhitelisted && connectedBidder.bidderData\n    if (notConnectedOrNotWhitelisted || auction.status !== AuctionStatus.Open) {\n      return <CannotBidMessage />\n    }\n    if (whitelistedAndReadyToBid) {\n      const { amount, position } = connectedBidder.bidderData\n      return (\n        <>\n          <Tag outline variant=\"success\" startIcon={<CheckmarkCircleIcon />}>\n            {t('Connected as %projectName%', { projectName: connectedBidder.bidderData.tokenName })}\n          </Tag>\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"24px\">\n            <Text small color=\"textSubtle\">\n              {t('Your existing bid')}\n            </Text>\n            <Text small>{getBalanceNumber(amount).toLocaleString()} CAKE</Text>\n          </Flex>\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\">\n            <Text small color=\"textSubtle\">\n              {t('Your position')}\n            </Text>\n            <Text small>{position ? `#${position}` : '-'}</Text>\n          </Flex>\n          <Button my=\"24px\" width=\"100%\" onClick={onPresentPlaceBid}>\n            {t('Place bid')}\n          </Button>\n          <Text color=\"textSubtle\" small>\n            {t('If your bid is unsuccessful, you’ll be able to reclaim your CAKE after the auction.')}\n          </Text>\n        </>\n      )\n    }\n    return (\n      <>\n        <Skeleton width=\"200px\" height=\"28px\" />\n        <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"24px\" px=\"8px\">\n          <Skeleton width=\"120px\" height=\"24px\" />\n          <Skeleton width=\"86px\" height=\"24px\" />\n        </Flex>\n        <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\n          <Skeleton width=\"96px\" height=\"24px\" />\n          <Skeleton width=\"42px\" height=\"24px\" />\n        </Flex>\n      </>\n    )\n  }\n\n  const cardTitle = auction.status === AuctionStatus.Closed ? t('Next Auction') : t('Current Auction')\n\n  return (\n    <AuctionDetailsCard mb={['24px', null, null, '0']}>\n      <CardHeader>\n        <Heading>{cardTitle}</Heading>\n      </CardHeader>\n      <CardBody>\n        <AuctionSchedule auction={auction} />\n        <Flex mt=\"24px\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\n          {getBidSection()}\n        </Flex>\n      </CardBody>\n      <AuctionFooter auction={auction} />\n    </AuctionDetailsCard>\n  )\n}\n\nexport default AuctionDetails\n","import React from 'react'\nimport { Flex } from '@arborswap/uikit'\nimport styled from 'styled-components'\n\nconst Wrapper = styled(Flex)`\n  overflow-x: scroll;\n  padding: 0;\n  border-radius: 24px 24px 0 0;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  scrollbar-width: none; /* Firefox */\n`\n\nconst Inner = styled(Flex)`\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.colors.input};\n  width: 100%;\n`\n\ninterface TabProps {\n  isActive?: boolean\n  onClick?: () => void\n}\n\nexport const TabToggle = styled.button<TabProps>`\n  display: inline-flex;\n  justify-content: center;\n  cursor: pointer;\n  flex: 1;\n  border: 0;\n  outline: 0;\n  padding: 16px;\n  margin: 0;\n  border-radius: 24px 24px 0 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: ${({ theme, isActive }) => (isActive ? theme.colors.text : theme.colors.textSubtle)};\n  background-color: ${({ theme, isActive }) => (isActive ? theme.card.background : theme.colors.input)};\n`\n\ninterface TabToggleGroupProps {\n  children: React.ReactElement[]\n}\n\n// There is very similar component on Info site, once we migrate it we can refactor them and put into UIKit.\n// UIKit has TabMenu component which is kinda similar but quite different in visuals and usage.\nexport const TabToggleGroup: React.FC<TabToggleGroupProps> = ({ children }) => {\n  return (\n    <Wrapper p={['0 4px', '0 16px']}>\n      <Inner>{children}</Inner>\n    </Wrapper>\n  )\n}\n","import addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date; // Add weeks and days\n\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { secondsInHour } from \"../constants/index.js\";\n/**\n * @name hoursToSeconds\n * @category Conversion Helpers\n * @summary Convert hours to seconds.\n *\n * @description\n * Convert a number of hours to a full number of seconds.\n *\n * @param {number} hours - number of hours to be converted\n *\n * @returns {number} the number of hours converted in seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 hours to seconds:\n * const result = hoursToSeconds(2)\n * //=> 7200\n */\n\nexport default function hoursToSeconds(hours) {\n  requiredArgs(1, arguments);\n  return Math.floor(hours * secondsInHour);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dateLeft, dateRight) {\n  requiredArgs(2, arguments);\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}","var roundingMap = {\n  ceil: Math.ceil,\n  round: Math.round,\n  floor: Math.floor,\n  trunc: function (value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n  } // Math.trunc is not supported by IE\n\n};\nvar defaultRoundingMethod = 'trunc';\nexport function getRoundingMethod(method) {\n  return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];\n}","import { millisecondsInHour } from \"../constants/index.js\";\nimport differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * const result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / millisecondsInHour;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import ethers, { Contract, ContractFunction } from 'ethers'\n\nexport type MultiCallResponse<T> = T | null\n\n// Predictions\nexport type PredictionsClaimableResponse = boolean\n\nexport interface PredictionsLedgerResponse {\n  position: 0 | 1\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport type PredictionsRefundableResponse = boolean\n\nexport interface PredictionsRoundsResponse {\n  epoch: ethers.BigNumber\n  startTimestamp: ethers.BigNumber\n  lockTimestamp: ethers.BigNumber\n  closeTimestamp: ethers.BigNumber\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  lockOracleId: ethers.BigNumber\n  closeOracleId: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\n// [rounds, ledgers, count]\nexport type PredictionsGetUserRoundsResponse = [ethers.BigNumber[], PredictionsLedgerResponse[], ethers.BigNumber]\n\nexport type PredictionsGetUserRoundsLengthResponse = ethers.BigNumber\n\nexport interface PredictionsContract extends Contract {\n  claimable: ContractFunction<PredictionsClaimableResponse>\n  getUserRounds: ContractFunction<PredictionsGetUserRoundsResponse>\n  getUserRoundsLength: ContractFunction<PredictionsGetUserRoundsLengthResponse>\n  ledger: ContractFunction<PredictionsLedgerResponse>\n  refundable: ContractFunction<PredictionsRefundableResponse>\n  rounds: ContractFunction<PredictionsRoundsResponse>\n}\n\n// Chainlink Orance\nexport type ChainLinkOracleLatestAnswerResponse = ethers.BigNumber\n\nexport interface ChainLinkOracleContract extends Contract {\n  latestAnswer: ContractFunction<ChainLinkOracleLatestAnswerResponse>\n}\n\n// Farm Auction\n\n// Note: slightly different from AuctionStatus used throughout UI\nexport enum FarmAuctionContractStatus {\n  Pending,\n  Open,\n  Close,\n}\n\nexport interface AuctionsResponse {\n  status: FarmAuctionContractStatus\n  startBlock: ethers.BigNumber\n  endBlock: ethers.BigNumber\n  initialBidAmount: ethers.BigNumber\n  leaderboard: ethers.BigNumber\n  leaderboardThreshold: ethers.BigNumber\n}\n\nexport interface BidsPerAuction {\n  account: string\n  amount: ethers.BigNumber\n}\n\nexport type ViewBidsPerAuctionResponse = [BidsPerAuction[], ethers.BigNumber]\n\n// [auctionId, bids, claimed, nextCursor]\nexport type ViewBidderAuctionsResponse = [ethers.BigNumber[], ethers.BigNumber[], boolean[], ethers.BigNumber]\n\ntype GetWhitelistedAddressesResponse = [\n  {\n    account: string\n    lpToken: string\n    token: string\n  }[],\n  ethers.BigNumber,\n]\n\ninterface AuctionsHistoryResponse {\n  totalAmount: ethers.BigNumber\n  hasClaimed: boolean\n}\n\nexport interface FarmAuctionContract extends Contract {\n  currentAuctionId: ContractFunction<ethers.BigNumber>\n  viewBidders: ContractFunction<[string[], ethers.BigNumber]>\n  totalCollected: ContractFunction<ethers.BigNumber>\n  auctions: ContractFunction<AuctionsResponse>\n  claimable: ContractFunction<boolean>\n  viewBidsPerAuction: ContractFunction<ViewBidsPerAuctionResponse>\n  viewBidderAuctions: ContractFunction<ViewBidderAuctionsResponse>\n  whitelisted: ContractFunction<boolean>\n  getWhitelistedAddresses: ContractFunction<GetWhitelistedAddressesResponse>\n  auctionsHistory: ContractFunction<AuctionsHistoryResponse>\n}\n","import { toDate, add, hoursToSeconds, differenceInHours } from 'date-fns'\nimport { BSC_BLOCK_TIME, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { getBidderInfo } from 'config/constants/farmAuctions'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { AuctionsResponse, FarmAuctionContractStatus, BidsPerAuction, ViewBidderAuctionsResponse } from 'utils/types'\nimport { Auction, AuctionStatus, Bidder, BidderAuction } from 'config/constants/types'\nimport { ethersToBigNumber } from 'utils/bigNumber'\n\nexport const FORM_ADDRESS =\n  'https://docs.google.com/forms/d/e/1FAIpQLScUkwbsMWwg7L5jjGjEcmv6RsoCNhFDkV3xEpRu2KcJrr47Sw/viewform'\n\n// Sorts bidders received from smart contract by bid amount in descending order (biggest -> smallest)\n// Also amends bidder information with getBidderInfo\n// auction is required if data will be used for table display, hence in reclaim and congratulations card its omitted\nexport const sortAuctionBidders = (bidders: BidsPerAuction[], auction?: Auction): Bidder[] => {\n  const sortedBidders = [...bidders]\n    .sort((a, b) => {\n      if (a.amount.lt(b.amount)) {\n        return 1\n      }\n      if (a.amount.gt(b.amount)) {\n        return -1\n      }\n      return 0\n    })\n    .map((bidder, index) => {\n      const bidderInfo = getBidderInfo(bidder.account)\n      return {\n        ...bidderInfo,\n        position: index + 1,\n        account: bidder.account,\n        amount: bidder.amount,\n      }\n    })\n\n  // Positions need to be adjusted in case 2 bidders has the same bid amount\n  // adjustedPosition will always increase by 1 in the following block for the first bidder\n  let adjustedPosition = 0\n\n  return sortedBidders.map((bidder, index, unadjustedBidders) => {\n    const amount = ethersToBigNumber(bidder.amount)\n    const samePositionAsAbove = index === 0 ? false : bidder.amount.eq(unadjustedBidders[index - 1].amount)\n    adjustedPosition = samePositionAsAbove ? adjustedPosition : adjustedPosition + 1\n    // Reclaim and congratulations card don't need auction data or isTopPosition\n    // in this case it is set to false just to avoid TS errors\n    let isTopPosition = auction ? index + 1 <= auction.topLeaderboard : false\n    // This is here in case we closed auction with less/more winners for some reason\n    if (auction && auction.leaderboardThreshold.gt(0)) {\n      isTopPosition = auction.leaderboardThreshold.lte(amount)\n    }\n    return {\n      ...bidder,\n      position: adjustedPosition,\n      isTopPosition,\n      samePositionAsAbove,\n      amount,\n    }\n  })\n}\n\n// Determine if the auction is:\n// - Live and biddable\n// - Has been scheduled for specific future date\n// - Not announced yet\n// - Recently Finished/Closed\nconst getAuctionStatus = (\n  currentBlock: number,\n  startBlock: number,\n  endBlock: number,\n  contractStatus: FarmAuctionContractStatus,\n) => {\n  if (contractStatus === FarmAuctionContractStatus.Pending && !startBlock && !endBlock) {\n    return AuctionStatus.ToBeAnnounced\n  }\n  if (contractStatus === FarmAuctionContractStatus.Close) {\n    return AuctionStatus.Closed\n  }\n  if (currentBlock >= endBlock) {\n    return AuctionStatus.Finished\n  }\n  if (contractStatus === FarmAuctionContractStatus.Open && currentBlock < startBlock) {\n    return AuctionStatus.Pending\n  }\n  if (contractStatus === FarmAuctionContractStatus.Open && currentBlock > startBlock) {\n    return AuctionStatus.Open\n  }\n  return AuctionStatus.ToBeAnnounced\n}\n\nconst getDateForBlock = async (currentBlock: number, block: number) => {\n  const blocksUntilBlock = block - currentBlock\n  const secondsUntilStart = blocksUntilBlock * BSC_BLOCK_TIME\n  // if block already happened we can get timestamp via .getBlock(block)\n  if (currentBlock > block) {\n    try {\n      const { timestamp } = await simpleRpcProvider.getBlock(block)\n      return toDate(timestamp * 1000)\n    } catch {\n      add(new Date(), { seconds: secondsUntilStart })\n    }\n  }\n  return add(new Date(), { seconds: secondsUntilStart })\n}\n\n// Get additional auction information based on the date received from smart contract\nexport const processAuctionData = async (auctionId: number, auctionResponse: AuctionsResponse): Promise<Auction> => {\n  const processedAuctionData = {\n    ...auctionResponse,\n    topLeaderboard: auctionResponse.leaderboard.toNumber(),\n    initialBidAmount: ethersToBigNumber(auctionResponse.initialBidAmount).div(DEFAULT_TOKEN_DECIMAL).toNumber(),\n    leaderboardThreshold: ethersToBigNumber(auctionResponse.leaderboardThreshold),\n    startBlock: auctionResponse.startBlock.toNumber(),\n    endBlock: auctionResponse.endBlock.toNumber(),\n  }\n\n  // Get all required data and blocks\n  const currentBlock = await simpleRpcProvider.getBlockNumber()\n  const startDate = await getDateForBlock(currentBlock, processedAuctionData.startBlock)\n  const endDate = await getDateForBlock(currentBlock, processedAuctionData.endBlock)\n  const farmStartDate = add(endDate, { hours: 12 })\n  const blocksToFarmStartDate = hoursToSeconds(12) / BSC_BLOCK_TIME\n  const farmStartBlock = processedAuctionData.endBlock + blocksToFarmStartDate\n  const farmDurationInBlocks = hoursToSeconds(7 * 24) / BSC_BLOCK_TIME\n  const farmEndBlock = farmStartBlock + farmDurationInBlocks\n  const farmEndDate = add(farmStartDate, { weeks: 1 })\n\n  const auctionStatus = getAuctionStatus(\n    currentBlock,\n    processedAuctionData.startBlock,\n    processedAuctionData.endBlock,\n    processedAuctionData.status,\n  )\n\n  return {\n    id: auctionId,\n    startDate,\n    endDate,\n    auctionDuration: differenceInHours(endDate, startDate),\n    farmStartBlock,\n    farmStartDate,\n    farmEndBlock,\n    farmEndDate,\n    ...processedAuctionData,\n    status: auctionStatus,\n  }\n}\n\nexport const processBidderAuctions = (\n  bidderAuctions: ViewBidderAuctionsResponse,\n): { auctions: BidderAuction[]; nextCursor: number } => {\n  const [auctionIds, bids, claimed, nextCursor] = bidderAuctions\n  const auctions = auctionIds.map((auctionId, index) => ({\n    id: auctionId.toNumber(),\n    amount: ethersToBigNumber(bids[index]),\n    claimed: claimed[index],\n  }))\n  return { auctions, nextCursor: nextCursor.toNumber() }\n}\n","import { useState, useEffect } from 'react'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { Auction, Bidder } from 'config/constants/types'\nimport { AUCTION_BIDDERS_TO_FETCH } from 'config'\nimport { processAuctionData, sortAuctionBidders } from '../helpers'\n\ninterface AuctionHistoryMap {\n  [key: number]: {\n    auction: Auction\n    bidders: Bidder[]\n  }\n}\n\nconst useAuctionHistory = (auctionId: number) => {\n  const [auctionHistory, setAuctionHistory] = useState<AuctionHistoryMap>({})\n\n  const farmAuctionContract = useFarmAuctionContract()\n\n  // Get past auction data\n  useEffect(() => {\n    const fetchAuction = async () => {\n      try {\n        const auctionData = await farmAuctionContract.auctions(auctionId)\n        const processedAuctionData = await processAuctionData(auctionId, auctionData)\n\n        const [auctionBidders] = await farmAuctionContract.viewBidsPerAuction(auctionId, 0, AUCTION_BIDDERS_TO_FETCH)\n        const sortedBidders = sortAuctionBidders(auctionBidders, processedAuctionData)\n        setAuctionHistory((prev) => ({\n          ...prev,\n          [auctionId]: { auction: processedAuctionData, bidders: sortedBidders },\n        }))\n      } catch (error) {\n        console.error('Failed to fetch auction history', error)\n      }\n    }\n    if (!auctionHistory[auctionId] && auctionId > 0) {\n      fetchAuction()\n    }\n  }, [farmAuctionContract, auctionHistory, auctionId])\n\n  return auctionHistory\n}\n\nexport default useAuctionHistory\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport {\n  Text,\n  Flex,\n  Box,\n  BunnyPlaceholderIcon,\n  Skeleton,\n  Button,\n  useMatchBreakpoints,\n  useModal,\n  SubMenu,\n  SubMenuItem,\n  EllipsisIcon,\n  LinkExternal,\n} from '@arborswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { Bidder } from 'config/constants/types'\nimport WhitelistedBiddersModal from '../WhitelistedBiddersModal'\n\nconst LeaderboardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 5fr 3fr 1fr;\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 3fr 5fr 5fr 1fr;\n  }\n`\n\nconst GridCell = styled(Flex)<{ isTopPosition: boolean }>`\n  height: 65px;\n  align-items: center;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n\n  ${({ theme, isTopPosition }) => isTopPosition && `background-color: ${theme.colors.warning}2D;`}\n`\n\ninterface LeaderboardRowProps {\n  bidder: Bidder\n  cakePriceBusd: BigNumber\n  isMobile: boolean\n}\n\nconst LeaderboardRow: React.FC<LeaderboardRowProps> = ({ bidder, cakePriceBusd, isMobile }) => {\n  const { t } = useTranslation()\n  const { isTopPosition, position, samePositionAsAbove, farmName, tokenName, amount, projectSite, lpAddress, account } =\n    bidder\n  return (\n    <>\n      <GridCell isTopPosition={isTopPosition} pl={['12px', '24px']}>\n        <Flex>\n          <Text bold={isTopPosition} color={samePositionAsAbove ? 'textDisabled' : 'text'} textTransform=\"uppercase\">\n            #{position}\n          </Text>\n        </Flex>\n      </GridCell>\n      <GridCell isTopPosition={isTopPosition}>\n        <Flex flexDirection=\"column\" pl={['8px']}>\n          <Flex>\n            <Text bold={isTopPosition} mr=\"4px\">\n              {farmName}\n            </Text>\n            {!isMobile && <Text>(1x)</Text>}\n          </Flex>\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {tokenName}\n          </Text>\n        </Flex>\n      </GridCell>\n      <GridCell isTopPosition={isTopPosition}>\n        <Flex flexDirection=\"column\" width=\"100%\" justifyContent=\"flex-end\" pr={[null, null, '24px']}>\n          <Text bold textTransform=\"uppercase\" width=\"100%\" textAlign=\"right\">\n            {getBalanceNumber(amount).toLocaleString()}\n          </Text>\n          {cakePriceBusd.gt(0) ? (\n            <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"right\">\n              ~${getBalanceNumber(amount.times(cakePriceBusd)).toLocaleString('en', { maximumFractionDigits: 0 })}\n            </Text>\n          ) : (\n            <Flex justifyContent=\"flex-end\">\n              <Skeleton width=\"48px\" />\n            </Flex>\n          )}\n        </Flex>\n      </GridCell>\n      <GridCell isTopPosition={isTopPosition}>\n        <SubMenu component={<EllipsisIcon height=\"16px\" width=\"16px\" />}>\n          {projectSite && (\n            <SubMenuItem as={LinkExternal} href={projectSite} bold={false} color=\"text\">\n              {t('Project Site')}\n            </SubMenuItem>\n          )}\n          {lpAddress && (\n            <SubMenuItem\n              as={LinkExternal}\n              href={`https://pancakeswap.info/pool/${lpAddress}`}\n              bold={false}\n              color=\"text\"\n            >\n              {t('LP Info')}\n            </SubMenuItem>\n          )}\n          {account && (\n            <SubMenuItem as={LinkExternal} href={getBscScanLink(account, 'address')} bold={false} color=\"text\">\n              {t('Bidder Address')}\n            </SubMenuItem>\n          )}\n        </SubMenu>\n      </GridCell>\n    </>\n  )\n}\n\nconst AuctionLeaderboardTable: React.FC<{ bidders: Bidder[]; noBidsText: string }> = ({ bidders, noBidsText }) => {\n  const [visibleBidders, setVisibleBidders] = useState(10)\n  const cakePriceBusd = usePriceCakeBusd()\n  const { t } = useTranslation()\n\n  const { isMobile } = useMatchBreakpoints()\n  const [onShowWhitelistedBidders] = useModal(<WhitelistedBiddersModal />)\n\n  const totalBidders = bidders.length\n\n  if (totalBidders === 0) {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" py=\"24px\">\n        <Text mb=\"8px\">{noBidsText}</Text>\n        <BunnyPlaceholderIcon height=\"64px\" width=\"64px\" />\n      </Flex>\n    )\n  }\n\n  return (\n    <Box>\n      <LeaderboardContainer>\n        <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\" pl={['12px', '24px']} py=\"16px\">\n          {t('Position')}\n        </Text>\n        <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\" pl={['8px']} py=\"16px\">\n          {t('Farm')}\n        </Text>\n        <Text\n          color=\"secondary\"\n          bold\n          fontSize=\"12px\"\n          textTransform=\"uppercase\"\n          textAlign=\"right\"\n          pr={[null, null, '24px']}\n          py=\"16px\"\n        >\n          {t('CAKE bid')}\n        </Text>\n        <Box />\n        {/* Rows */}\n        {bidders.slice(0, visibleBidders).map((bidder) => (\n          <LeaderboardRow key={bidder.account} bidder={bidder} cakePriceBusd={cakePriceBusd} isMobile={isMobile} />\n        ))}\n      </LeaderboardContainer>\n      <Flex mt=\"16px\" px=\"24px\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\n        {visibleBidders <= 10 && totalBidders > 10 && (\n          <Text color=\"textSubtle\" textAlign=\"center\">\n            {t('Showing top 10 bids only.')}{' '}\n            <Button px=\"0\" variant=\"text\" onClick={onShowWhitelistedBidders}>\n              {t('See all whitelisted bidders')}\n            </Button>\n          </Text>\n        )}\n        {visibleBidders < totalBidders && (\n          <Button\n            mt=\"16px\"\n            variant=\"text\"\n            onClick={() =>\n              setVisibleBidders((prev) => {\n                if (totalBidders - prev > 10) {\n                  return prev + 10\n                }\n                return totalBidders\n              })\n            }\n          >\n            {t('Show More')}\n          </Button>\n        )}\n      </Flex>\n    </Box>\n  )\n}\n\nexport default AuctionLeaderboardTable\n","import React, { useState } from 'react'\nimport { format } from 'date-fns'\nimport styled from 'styled-components'\nimport {\n  Text,\n  Flex,\n  Box,\n  Input,\n  ArrowBackIcon,\n  ArrowForwardIcon,\n  ArrowLastIcon,\n  IconButton,\n  BunnyPlaceholderIcon,\n  Spinner,\n  useMatchBreakpoints,\n} from '@arborswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useAuctionHistory from '../hooks/useAuctionHistory'\nimport AuctionLeaderboardTable from './AuctionLeaderboard/AuctionLeaderboardTable'\n\ninterface AuctionHistoryProps {\n  mostRecentClosedAuctionId: number\n}\n\nconst StyledIconButton = styled(IconButton)`\n  width: 32px;\n\n  :disabled {\n    background: none;\n\n    svg {\n      fill: ${({ theme }) => theme.colors.textDisabled};\n\n      path {\n        fill: ${({ theme }) => theme.colors.textDisabled};\n      }\n    }\n  }\n`\n\nconst AuctionHistory: React.FC<AuctionHistoryProps> = ({ mostRecentClosedAuctionId }) => {\n  const [historyAuctionId, setHistoryAuctionId] = useState(\n    mostRecentClosedAuctionId ? mostRecentClosedAuctionId.toString() : '0',\n  )\n  const historyAuctionIdAsInt = parseInt(historyAuctionId, 10)\n\n  const { t } = useTranslation()\n\n  const { isXs, isSm, isMd, isLg, isXl, isXxl } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const isSmallerScreen = isXs || isSm || isMd\n\n  const auctionHistory = useAuctionHistory(historyAuctionIdAsInt)\n  const selectedAuction = Object.values(auctionHistory).find(\n    (auctionData) => auctionData.auction.id === historyAuctionIdAsInt,\n  )\n\n  let auctionTable = selectedAuction ? (\n    <AuctionLeaderboardTable bidders={selectedAuction.bidders} noBidsText=\"No bids were placed in this auction\" />\n  ) : (\n    <Flex justifyContent=\"center\" alignItems=\"center\" p=\"24px\" height=\"250px\">\n      <Spinner />\n    </Flex>\n  )\n\n  if (Number.isNaN(historyAuctionIdAsInt)) {\n    auctionTable = (\n      <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" p=\"24px\" height=\"250px\">\n        <Text mb=\"8px\">{t('Please specify auction ID')}</Text>\n        <BunnyPlaceholderIcon height=\"64px\" width=\"64px\" />\n      </Flex>\n    )\n  }\n\n  const endDate = selectedAuction ? format(selectedAuction.auction.endDate, 'MMM. dd yyyy, hh:mm aa') : null\n\n  const handleHistoryAuctionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      target: { value },\n    } = event\n    if (value) {\n      let newAuctionId = value\n      if (parseInt(value, 10) <= 0) {\n        newAuctionId = ''\n      }\n      if (parseInt(value, 10) >= mostRecentClosedAuctionId) {\n        newAuctionId = mostRecentClosedAuctionId.toString()\n      }\n      setHistoryAuctionId(newAuctionId)\n    } else {\n      setHistoryAuctionId('')\n    }\n  }\n\n  const handleArrowPress = (auctionId: number) => {\n    if (auctionId) {\n      setHistoryAuctionId(auctionId.toString())\n    } else {\n      // auctionId is NaN when the input is empty, the only button press that will trigger this func is 'forward one'\n      setHistoryAuctionId('1')\n    }\n  }\n\n  return (\n    <Box py=\"24px\">\n      <Flex px={['12px', '24px']} justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flex=\"3\" alignItems=\"center\">\n          <Text bold fontSize={isLargerScreen ? '20px' : '16px'} mr={['4px', '8px']}>\n            {t('Auction #')}\n          </Text>\n          <Box width=\"62px\" mr={['4px', '16px']}>\n            <Input\n              disabled={!mostRecentClosedAuctionId}\n              type=\"input\"\n              value={historyAuctionId}\n              onChange={handleHistoryAuctionChange}\n            />\n          </Box>\n          <StyledIconButton\n            disabled={!historyAuctionIdAsInt || historyAuctionIdAsInt <= 1}\n            variant=\"text\"\n            scale=\"sm\"\n            mr={['8px', '12px']}\n            onClick={() => handleArrowPress(historyAuctionIdAsInt - 1)}\n          >\n            <ArrowBackIcon />\n          </StyledIconButton>\n          <StyledIconButton\n            disabled={historyAuctionIdAsInt >= mostRecentClosedAuctionId}\n            variant=\"text\"\n            scale=\"sm\"\n            mr={['8px', '12px']}\n            onClick={() => handleArrowPress(historyAuctionIdAsInt + 1)}\n          >\n            <ArrowForwardIcon />\n          </StyledIconButton>\n          <StyledIconButton\n            disabled={historyAuctionIdAsInt >= mostRecentClosedAuctionId}\n            variant=\"text\"\n            scale=\"sm\"\n            onClick={() => handleArrowPress(mostRecentClosedAuctionId)}\n          >\n            <ArrowLastIcon />\n          </StyledIconButton>\n        </Flex>\n        {isLargerScreen && (\n          <Flex flex=\"2\" justifyContent=\"flex-end\">\n            {endDate && <Text>{t('Ended %date%', { date: endDate })}</Text>}\n          </Flex>\n        )}\n      </Flex>\n      {isSmallerScreen && (\n        <Flex px={['12px', '24px']} pt=\"8px\">\n          {endDate && <Text>{t('Ended %date%', { date: endDate })}</Text>}\n        </Flex>\n      )}\n      {mostRecentClosedAuctionId ? (\n        auctionTable\n      ) : (\n        <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" p=\"24px\" height=\"250px\">\n          <Text mb=\"8px\">{t('No history yet')}</Text>\n          <BunnyPlaceholderIcon height=\"64px\" width=\"64px\" />\n        </Flex>\n      )}\n    </Box>\n  )\n}\n\nexport default AuctionHistory\n","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Card, Flex, Box, Spinner } from '@arborswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus, Bidder } from 'config/constants/types'\nimport { TabToggleGroup, TabToggle } from '../TabToggle'\nimport AuctionHistory from '../AuctionHistory'\nimport AuctionProgress from './AuctionProgress'\nimport AuctionRibbon from './AuctionRibbon'\nimport AuctionLeaderboardTable from './AuctionLeaderboardTable'\n\nconst AuctionLeaderboardCard = styled(Card)`\n  width: 100%;\n  overflow: visible;\n  flex: 2;\n`\n\ninterface AuctionLeaderboardProps {\n  auction: Auction\n  bidders: Bidder[]\n}\n\nenum Tabs {\n  Latest,\n  Archive,\n}\n\nconst getMostRecentClosedAuctionId = (latestAuctionId: number, latestAuctionStatus: AuctionStatus) => {\n  if (latestAuctionStatus === AuctionStatus.Closed) {\n    return latestAuctionId\n  }\n  if (latestAuctionId === 0) {\n    return null\n  }\n  return latestAuctionId - 1\n}\n\nconst CurrentAuctionCard: React.FC<AuctionLeaderboardProps> = ({ auction, bidders }) => {\n  const { t } = useTranslation()\n  const [activeTab, setActiveTab] = useState(Tabs.Latest)\n\n  if (!auction || !bidders) {\n    return (\n      <AuctionLeaderboardCard>\n        <TabToggleGroup>\n          <TabToggle isActive={activeTab === Tabs.Latest} onClick={() => setActiveTab(Tabs.Latest)}>\n            {t('Latest')}\n          </TabToggle>\n          <TabToggle isActive={activeTab === Tabs.Archive} onClick={() => setActiveTab(Tabs.Archive)}>\n            {t('Archive')}\n          </TabToggle>\n          <TabToggle isActive={activeTab === Tabs.Archive} onClick={() => setActiveTab(Tabs.Archive)}>\n            {t('Archive')}\n          </TabToggle>\n          <TabToggle isActive={activeTab === Tabs.Archive} onClick={() => setActiveTab(Tabs.Archive)}>\n            {t('Archive')}\n          </TabToggle>\n        </TabToggleGroup>\n        <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" height=\"320px\">\n          <Spinner />\n        </Flex>\n      </AuctionLeaderboardCard>\n    )\n  }\n  const { id, status } = auction\n\n  return (\n    <AuctionLeaderboardCard>\n      <TabToggleGroup>\n        <TabToggle isActive={activeTab === Tabs.Latest} onClick={() => setActiveTab(Tabs.Latest)}>\n          {t('Latest')}\n        </TabToggle>\n        <TabToggle isActive={activeTab === Tabs.Archive} onClick={() => setActiveTab(Tabs.Archive)}>\n          {t('Archive')}\n        </TabToggle>\n        <TabToggle isActive={activeTab === Tabs.Archive} onClick={() => setActiveTab(Tabs.Archive)}>\n          {t('Archive')}\n        </TabToggle>\n        <TabToggle isActive={activeTab === Tabs.Archive} onClick={() => setActiveTab(Tabs.Archive)}>\n          {t('Archive')}\n        </TabToggle>\n      </TabToggleGroup>\n      {activeTab === Tabs.Latest ? (\n        <Box position=\"relative\">\n          <Text bold fontSize=\"20px\" py=\"24px\" px={['12px', '24px']}>\n            {t('Auction #%auctionId%', { auctionId: id })}\n          </Text>\n          <AuctionRibbon auction={auction} noAuctionHistory={getMostRecentClosedAuctionId(id, status) === null} />\n          <AuctionProgress auction={auction} />\n          <AuctionLeaderboardTable bidders={bidders} noBidsText=\"No bids yet\" />\n        </Box>\n      ) : (\n        <AuctionHistory mostRecentClosedAuctionId={getMostRecentClosedAuctionId(id, status)} />\n      )}\n    </AuctionLeaderboardCard>\n  )\n}\n\nexport default CurrentAuctionCard\n","import React, { useState, useEffect } from 'react'\nimport { Progress } from '@arborswap/uikit'\nimport { differenceInSeconds } from 'date-fns'\nimport { Auction, AuctionStatus } from 'config/constants/types'\nimport useRefresh from 'hooks/useRefresh'\n\nconst AuctionProgress: React.FC<{ auction: Auction }> = ({ auction }) => {\n  const [progress, setProgress] = useState<number>(0)\n  const { slowRefresh } = useRefresh()\n\n  // Note: opted to base it on date rather than block number to reduce the amount of calls and async handling\n  useEffect(() => {\n    if (auction.status === AuctionStatus.ToBeAnnounced || auction.status === AuctionStatus.Pending) {\n      setProgress(0)\n    } else {\n      const now = new Date()\n      const auctionDuration = differenceInSeconds(auction.endDate, auction.startDate)\n      const secondsPassed = differenceInSeconds(now, auction.startDate)\n      const percentagePassed = (secondsPassed * 100) / auctionDuration\n      setProgress(percentagePassed < 100 ? percentagePassed : 100)\n    }\n  }, [slowRefresh, auction])\n\n  return <Progress variant=\"flat\" primaryStep={progress} />\n}\n\nexport default AuctionProgress\n","import { Text } from '@arborswap/uikit'\nimport { Auction, AuctionStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledRibbon = styled.div<{ color: string }>`\n  display: flex;\n  justify-content: center;\n  background-color: ${({ theme, color }) => theme.colors[color]};\n  color: white;\n  position: absolute;\n  right: 0;\n  top: 0;\n  text-align: center;\n  width: 94px;\n  height: 94px;\n  z-index: 1;\n  clip-path: polygon(0 0, 40% 0, 100% 60%, 100% 100%);\n\n  & > div {\n    padding-top: 23%;\n    overflow: hidden;\n    transform: rotate(45deg);\n  }\n`\n\nconst AuctionRibbon: React.FC<{ auction: Auction; noAuctionHistory: boolean }> = ({ auction, noAuctionHistory }) => {\n  const { t } = useTranslation()\n  const { status } = auction\n\n  // Don't show Live or Finished in case of fresh contract with no history\n  if (noAuctionHistory) {\n    return null\n  }\n\n  let ribbonText = t('Finished')\n  let color = 'textDisabled'\n  if (status === AuctionStatus.Open) {\n    ribbonText = `${t('Live')}!`\n    color = 'success'\n  }\n  if (status === AuctionStatus.Pending) {\n    ribbonText = `${t('Get ready')}!`\n    color = 'warning'\n  }\n  return (\n    <StyledRibbon color={color}>\n      <Text color=\"white\" textTransform=\"uppercase\">\n        {ribbonText}\n      </Text>\n    </StyledRibbon>\n  )\n}\n\nexport default AuctionRibbon\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { isAfter, differenceInSeconds } from 'date-fns'\nimport { Text, Flex, PocketWatchIcon, Skeleton } from '@arborswap/uikit'\nimport { Auction, AuctionStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst AuctionCountDown = styled(Flex)`\n  align-items: flex-end;\n  margin: 0 16px 0 16px;\n`\n\nconst AuctionTimer: React.FC<{ auction: Auction }> = ({ auction }) => {\n  const { t } = useTranslation()\n  if (!auction) {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"48px\">\n        <Skeleton width=\"256px\" height=\"40px\" />\n      </Flex>\n    )\n  }\n\n  if (auction.status === AuctionStatus.ToBeAnnounced || auction.status === AuctionStatus.Closed) {\n    return null\n  }\n  if (auction.status === AuctionStatus.Finished) {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"48px\">\n        <Text bold>{t('Closing')}...</Text>\n        <PocketWatchIcon height=\"40px\" width=\"40px\" />\n      </Flex>\n    )\n  }\n  const { startDate, endDate } = auction\n  const timerUntil = isAfter(startDate, new Date()) ? startDate : endDate\n  const timerTitle = timerUntil === endDate ? t('Ending in') : t('Next auction')\n  const secondsRemaining = differenceInSeconds(timerUntil, new Date())\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n  return (\n    <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"48px\">\n      <Text bold>{timerTitle}: </Text>\n      <AuctionCountDown>\n        {days !== 0 && (\n          <>\n            <Text verticalAlign=\"baseline\" lineHeight=\"28px\" fontSize=\"24px\" bold color=\"secondary\" mr=\"4px\">\n              {days}\n            </Text>\n            <Text verticalAlign=\"baseline\" bold mr=\"4px\">\n              {t('d')}\n            </Text>\n          </>\n        )}\n        <Text verticalAlign=\"baseline\" lineHeight=\"28px\" fontSize=\"24px\" bold color=\"secondary\" mr=\"4px\">\n          {hours}\n        </Text>\n        <Text verticalAlign=\"baseline\" bold mr=\"4px\">\n          {t('h')}\n        </Text>\n        <Text verticalAlign=\"baseline\" lineHeight=\"28px\" fontSize=\"24px\" bold color=\"secondary\" mr=\"4px\">\n          {minutes}\n        </Text>\n        <Text verticalAlign=\"baseline\" bold>\n          {t('m')}\n        </Text>\n      </AuctionCountDown>\n      <PocketWatchIcon height=\"40px\" width=\"40px\" />\n    </Flex>\n  )\n}\n\nexport default AuctionTimer\n","import { useEffect, useReducer } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BidderAuction } from 'config/constants/types'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { RECLAIM_AUCTIONS_TO_FETCH } from 'config'\nimport { processBidderAuctions, sortAuctionBidders } from '../helpers'\n\ninterface ReclaimableAuction {\n  id: number\n  amount: BigNumber\n  position: number\n}\n\ninterface ReclaimReducerState {\n  auctions: BidderAuction[]\n  currentCursor: number\n  nextCursor: number\n  nextAuctionToCheck: number // nextAuctionToCheck is array index in auctions\n  auctionToReclaim: ReclaimableAuction | null\n  loading: boolean\n}\n\nconst initialState: ReclaimReducerState = {\n  auctions: [],\n  currentCursor: 0,\n  nextCursor: 0,\n  nextAuctionToCheck: 0,\n  auctionToReclaim: null,\n  loading: false,\n}\n\nconst reclaimReducer = (state: ReclaimReducerState, action: { type: string; payload?: any }): ReclaimReducerState => {\n  switch (action.type) {\n    case 'setAuctions':\n      return {\n        auctions: action.payload.auctions,\n        currentCursor: state.currentCursor,\n        nextCursor: action.payload.nextCursor,\n        nextAuctionToCheck: 0,\n        auctionToReclaim: null,\n        loading: false,\n      }\n    case 'setAuctionToReclaim':\n      return {\n        ...state,\n        auctionToReclaim: action.payload.auctionToReclaim,\n        loading: false,\n      }\n    case 'checkNextAuction': {\n      const nextAuctionToCheck = state.nextAuctionToCheck + 1\n      if (nextAuctionToCheck === state.auctions.length) {\n        // Checked all auctions in the batch\n        return {\n          ...state,\n          auctions: [],\n          currentCursor: state.nextCursor,\n          auctionToReclaim: null,\n          loading: false,\n        }\n      }\n      return {\n        ...state,\n        nextAuctionToCheck,\n        auctionToReclaim: null,\n        loading: false,\n      }\n    }\n    case 'setLoading':\n      return { ...state, loading: action.payload.loading }\n    case 'reset':\n      return initialState\n    default:\n      return state\n  }\n}\n\n/**\n * This hook checks if user has participated in previous auctions and has some bids to claim back.\n */\nconst useReclaimAuctionBid = (): [ReclaimableAuction | null, () => void] => {\n  const { account } = useWeb3React()\n\n  const [state, dispatch] = useReducer(reclaimReducer, initialState)\n\n  const farmAuctionContract = useFarmAuctionContract()\n\n  const checkNextAuction = () => {\n    dispatch({ type: 'checkNextAuction' })\n  }\n\n  // Reset checking if account was switched\n  useEffect(() => {\n    dispatch({ type: 'reset' })\n  }, [account])\n\n  // Fetch auction data for auctions account has participated\n  useEffect(() => {\n    const fetchBidderAuctions = async () => {\n      try {\n        dispatch({ type: 'setLoading', payload: { loading: true } })\n\n        const bidderAuctionsResponse = await farmAuctionContract.viewBidderAuctions(\n          account,\n          state.currentCursor,\n          RECLAIM_AUCTIONS_TO_FETCH,\n        )\n\n        const { auctions, nextCursor } = processBidderAuctions(bidderAuctionsResponse)\n        if (auctions.length > 0) {\n          dispatch({ type: 'setAuctions', payload: { auctions, nextCursor } })\n        }\n      } catch (error) {\n        console.error('Failed to fetch auctions for bidder', error)\n        dispatch({ type: 'setLoading', payload: { loading: false } })\n      }\n    }\n\n    if (!state.loading && account && state.currentCursor === state.nextCursor) {\n      fetchBidderAuctions()\n    }\n  }, [account, state, farmAuctionContract])\n\n  useEffect(() => {\n    const checkIfAuctionIsClaimable = async (auctionToCheck: BidderAuction) => {\n      dispatch({ type: 'setLoading', payload: { loading: true } })\n      try {\n        const isClaimable = await farmAuctionContract.claimable(auctionToCheck.id, account)\n        if (isClaimable) {\n          const [auctionBidders] = await farmAuctionContract.viewBidsPerAuction(auctionToCheck.id, 0, 500)\n          const sortedBidders = sortAuctionBidders(auctionBidders)\n          const accountBidderData = sortedBidders.find((bidder) => bidder.account === account)\n          const position = accountBidderData?.position\n          const auctionToReclaim = { id: auctionToCheck.id, amount: auctionToCheck.amount, position }\n          dispatch({ type: 'setAuctionToReclaim', payload: { auctionToReclaim } })\n        } else {\n          dispatch({ type: 'checkNextAuction' })\n        }\n      } catch (error) {\n        dispatch({ type: 'setLoading', payload: { loading: false } })\n        console.error('Failed to check for unclaim bids', error)\n      }\n    }\n    const { auctions, nextAuctionToCheck, loading } = state\n    if (auctions.length > 0 && account && !loading) {\n      const auctionToCheck = auctions[nextAuctionToCheck]\n      checkIfAuctionIsClaimable(auctionToCheck)\n    }\n  }, [account, state, farmAuctionContract])\n\n  return [state.auctionToReclaim, checkNextAuction]\n}\n\nexport default useReclaimAuctionBid\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Card, CardHeader, CardBody, Flex } from '@arborswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useFarmAuctionContract } from 'hooks/useContract'\nimport { ethersToBigNumber } from 'utils/bigNumber'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport useToast from 'hooks/useToast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { ethers } from 'ethers'\nimport ApproveConfirmButtons, { ButtonArrangement } from 'views/Profile/components/ApproveConfirmButtons'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useReclaimAuctionBid from '../hooks/useReclaimAuctionBid'\n\nconst StyledReclaimBidCard = styled(Card)`\n  margin-top: 16px;\n  flex: 1;\n`\n\nconst ReclaimBidCard: React.FC = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const [reclaimableAuction, checkForNextReclaimableAuction] = useReclaimAuctionBid()\n\n  const cakeContract = useCake()\n  const farmAuctionContract = useFarmAuctionContract()\n\n  const { toastSuccess } = useToast()\n\n  const { isApproving, isApproved, isConfirming, handleApprove, handleConfirm } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.allowance(account, farmAuctionContract.address)\n        const currentAllowance = ethersToBigNumber(response)\n        return currentAllowance.gt(0)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return callWithGasPrice(cakeContract, 'approve', [farmAuctionContract.address, ethers.constants.MaxUint256])\n    },\n    onApproveSuccess: async ({ receipt }) => {\n      toastSuccess(\n        t('Contract approved - you can now reclaim your bid!'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash} />,\n      )\n    },\n    onConfirm: () => {\n      return callWithGasPrice(farmAuctionContract, 'claimAuction', [reclaimableAuction.id])\n    },\n    onSuccess: async ({ receipt }) => {\n      checkForNextReclaimableAuction()\n      toastSuccess(t('Bid reclaimed!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n    },\n  })\n\n  if (!reclaimableAuction) {\n    return null\n  }\n\n  const { position, amount } = reclaimableAuction\n\n  return (\n    <StyledReclaimBidCard mb={['24px', null, null, '0']}>\n      <CardHeader>\n        <Heading>{t('Reclaim Bid')}</Heading>\n      </CardHeader>\n      <CardBody>\n        <Text mb=\"16px\">\n          {t('Your bid in Auction #%auctionId% was unsuccessful.', { auctionId: reclaimableAuction.id })}\n        </Text>\n        <Text bold mb=\"16px\">\n          {t('Reclaim your CAKE now.')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text color=\"textSubtle\">{t('Your total bid')}</Text>\n          <Text>{t('%num% CAKE', { num: getBalanceNumber(amount).toLocaleString() })}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\" mb=\"24px\">\n          <Text color=\"textSubtle\">{t('Your position')}</Text>\n          <Text>#{position}</Text>\n        </Flex>\n        {account ? (\n          <ApproveConfirmButtons\n            isApproveDisabled={isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={false}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n            buttonArrangement={ButtonArrangement.SEQUENTIAL}\n            confirmLabel={t('Reclaim')}\n          />\n        ) : (\n          <ConnectWalletButton />\n        )}\n      </CardBody>\n    </StyledReclaimBidCard>\n  )\n}\n\nexport default ReclaimBidCard\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Auction, AuctionStatus, Bidder } from 'config/constants/types'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { processAuctionData, sortAuctionBidders } from '../helpers'\n\ninterface WonAuction {\n  auction: Auction\n  bidderData: Bidder\n}\n\nconst useCongratulateAuctionWinner = (currentAuction: Auction, bidders: Bidder[]): WonAuction => {\n  const [wonAuction, setWonAuction] = useState<WonAuction | null>(null)\n\n  const { account } = useWeb3React()\n\n  const farmAuctionContract = useFarmAuctionContract()\n\n  useEffect(() => {\n    const checkIfWonPreviousAuction = async (previousAuctionId: number) => {\n      const auctionData = await farmAuctionContract.auctions(previousAuctionId)\n      const processedAuctionData = await processAuctionData(previousAuctionId, auctionData)\n      const [auctionBidders] = await farmAuctionContract.viewBidsPerAuction(previousAuctionId, 0, 500)\n      const sortedBidders = sortAuctionBidders(auctionBidders)\n      const { leaderboardThreshold } = processedAuctionData\n      const winnerAddresses = sortedBidders\n        .filter((bidder) => leaderboardThreshold.lte(bidder.amount))\n        .map((bidder) => bidder.account)\n      if (winnerAddresses.includes(account)) {\n        const accountBidderData = sortedBidders.find((bidder) => bidder.account === account)\n        setWonAuction({\n          auction: processedAuctionData,\n          bidderData: accountBidderData,\n        })\n      }\n    }\n\n    const winnerAddresses = bidders\n      .filter((bidder) => currentAuction.leaderboardThreshold.lte(bidder.amount))\n      .map((bidder) => bidder.account)\n    const previousAuctionId = currentAuction.id - 1\n    if (currentAuction.status === AuctionStatus.Closed && winnerAddresses.includes(account)) {\n      const accountBidderData = bidders.find((bidder) => bidder.account === account)\n      setWonAuction({\n        auction: currentAuction,\n        bidderData: accountBidderData,\n      })\n    } else if (previousAuctionId > 0) {\n      checkIfWonPreviousAuction(previousAuctionId)\n    }\n  }, [currentAuction, bidders, account, farmAuctionContract])\n\n  return wonAuction\n}\n\nexport default useCongratulateAuctionWinner\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Card, CardHeader, CardBody, Flex } from '@arborswap/uikit'\nimport { Auction, Bidder } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useCongratulateAuctionWinner from '../hooks/useCongratulateAuctionWinner'\nimport { FarmSchedule } from './AuctionDetailsCard/AuctionSchedule'\nimport WhitelistedBiddersButton from './WhitelistedBiddersButton'\n\nconst StyledReclaimBidCard = styled(Card)`\n  margin-top: 16px;\n  flex: 1;\n`\n\nconst CongratulationsCard: React.FC<{ currentAuction: Auction; bidders: Bidder[] }> = ({ currentAuction, bidders }) => {\n  const { t } = useTranslation()\n  const wonAuction = useCongratulateAuctionWinner(currentAuction, bidders)\n\n  if (!wonAuction) {\n    return null\n  }\n\n  const { auction, bidderData } = wonAuction\n  const { amount, position } = bidderData\n  return (\n    <StyledReclaimBidCard mb={['24px', null, null, '0']}>\n      <CardHeader>\n        <Heading>{t('Congratulations!')}</Heading>\n      </CardHeader>\n      <CardBody>\n        <Text mb=\"16px\">{t('Your bid in Auction #%auctionId% was successful.', { auctionId: auction.id })}</Text>\n        <Text>{t('Your Farm will be launched as follows:')}</Text>\n        <Flex flexDirection=\"column\" mb=\"24px\">\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\">\n            <Text color=\"textSubtle\">{t('Multiplier per farm')}</Text>\n            <Text>1x {t('each')}</Text>\n          </Flex>\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\">\n            <Text color=\"textSubtle\">{t('Total whitelisted bidders')}</Text>\n            <WhitelistedBiddersButton />\n          </Flex>\n          <FarmSchedule auction={auction} showForClosedAuction />\n        </Flex>\n\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text color=\"textSubtle\">{t('Your total bid')}</Text>\n          <Text>{getBalanceNumber(amount).toLocaleString()} CAKE</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text color=\"textSubtle\">{t('Your position')}</Text>\n          <Text>#{position}</Text>\n        </Flex>\n      </CardBody>\n    </StyledReclaimBidCard>\n  )\n}\n\nexport default CongratulationsCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@arborswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport PageHeader from 'components/PageHeader'\nimport PageSection from 'components/PageSection'\nimport useTheme from 'hooks/useTheme'\n// import FAQs from './components/FAQs'\nimport AuctionDetails from './components/AuctionDetailsCard'\nimport AuctionLeaderboard from './components/AuctionLeaderboard'\n// import { FORM_ADDRESS } from './helpers'\nimport { useCurrentFarmAuction } from './hooks/useCurrentFarmAuction'\nimport AuctionTimer from './components/AuctionTimer'\nimport ReclaimBidCard from './components/ReclaimBidCard'\n// import NotWhitelistedNotice from './components/NotWhitelistedNotice'\nimport CongratulationsCard from './components/CongratulationsCard'\n// import AuctionCakeBurn from './components/AuctionCakeBurn'\n\nconst StyledHeader = styled(PageHeader)`\n  max-height: max-content;\n  margin-bottom: -40px;\n  padding-bottom: 40px;\n  overflow: hidden;\n  ${({ theme }) => theme.mediaQueries.md} {\n    max-height: 600px;\n  }\n`\n\nconst Left = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n`\n\nconst Right = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  flex: 0.5;\n  & img {\n    height: 50%;\n    width: 50%;\n    max-height: 330px;\n    margin-top: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & img {\n      height: auto;\n      width: auto;\n    }\n  }\n`\n\nconst AuctionContainer = styled(Flex)`\n  width: 100%;\n  align-items: flex-start;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    gap: 24px;\n  }\n`\n\nconst FarmAuction = () => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { account } = useWeb3React()\n\n  const { currentAuction, bidders, connectedBidder, refreshBidders } = useCurrentFarmAuction(account)\n\n  return (\n    <>\n      <>\n        <PageSection\n          innerProps={{ style: { margin: '0', width: '100%' } }}\n          background={theme.colors.bgDark}\n          p=\"24px 0\"\n          index={2}\n          concaveDivider\n          dividerPosition=\"top\"\n        >\n          <AuctionTimer auction={currentAuction} />\n          <AuctionContainer flexDirection={['column', null, null, 'row']}>\n            <Flex flex=\"1\" flexDirection=\"column\" width=\"100%\" minWidth=\"288px\">\n              <AuctionDetails\n                auction={currentAuction}\n                connectedBidder={connectedBidder}\n                refreshBidders={refreshBidders}\n              />\n              {connectedBidder?.isWhitelisted && bidders && currentAuction && (\n                <CongratulationsCard currentAuction={currentAuction} bidders={bidders} />\n              )}\n              {connectedBidder?.isWhitelisted && <ReclaimBidCard />}\n            </Flex>\n            <AuctionLeaderboard auction={currentAuction} bidders={bidders} />\n          </AuctionContainer>\n        </PageSection>\n      </>\n    </>\n  )\n}\n\nexport default FarmAuction\n","import { useState, useEffect } from 'react'\nimport isEqual from 'lodash/isEqual'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { Auction, ConnectedBidder, Bidder } from 'config/constants/types'\nimport { getBidderInfo } from 'config/constants/farmAuctions'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport useRefresh from 'hooks/useRefresh'\nimport { AUCTION_BIDDERS_TO_FETCH } from 'config'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { sortAuctionBidders, processAuctionData } from '../helpers'\n\nexport const useCurrentFarmAuction = (account: string) => {\n  const [currentAuction, setCurrentAuction] = useState<Auction | null>(null)\n  const [bidders, setBidders] = useState<Bidder[] | null>(null)\n  const [connectedBidder, setConnectedBidder] = useState<ConnectedBidder | null>(null)\n  // Used to force-refresh bidders after successful bid\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  const { fastRefresh } = useRefresh()\n\n  const farmAuctionContract = useFarmAuctionContract()\n\n  // Get latest auction id and its data\n  useEffect(() => {\n    const fetchCurrentAuction = async () => {\n      try {\n        const auctionId = await farmAuctionContract.currentAuctionId()\n        const auctionData = await farmAuctionContract.auctions(auctionId)\n        const processedAuctionData = await processAuctionData(auctionId.toNumber(), auctionData)\n        setCurrentAuction(processedAuctionData)\n      } catch (error) {\n        console.error('Failed to fetch current auction', error)\n      }\n    }\n    fetchCurrentAuction()\n  }, [farmAuctionContract, fastRefresh])\n\n  // Fetch bidders for current auction\n  useEffect(() => {\n    const fetchBidders = async () => {\n      try {\n        const [currentAuctionBidders] = await farmAuctionContract.viewBidsPerAuction(\n          currentAuction.id,\n          0,\n          AUCTION_BIDDERS_TO_FETCH,\n        )\n        const sortedBidders = sortAuctionBidders(currentAuctionBidders, currentAuction)\n        setBidders(sortedBidders)\n      } catch (error) {\n        console.error('Failed to fetch bidders', error)\n      }\n    }\n    if (currentAuction) {\n      fetchBidders()\n    }\n  }, [currentAuction, farmAuctionContract, lastUpdated, fastRefresh])\n\n  // Check if connected wallet is whitelisted\n  useEffect(() => {\n    const checkAccount = async () => {\n      try {\n        const whitelistedStatus = await farmAuctionContract.whitelisted(account)\n        setConnectedBidder({\n          account,\n          isWhitelisted: whitelistedStatus,\n        })\n      } catch (error) {\n        console.error('Failed to check if account is whitelisted', error)\n      }\n    }\n    if (account && (!connectedBidder || connectedBidder.account !== account)) {\n      checkAccount()\n    }\n    // Refresh UI if user logs out\n    if (!account) {\n      setConnectedBidder(null)\n    }\n  }, [account, connectedBidder, farmAuctionContract])\n\n  // Attach bidder data to connectedBidder object\n  useEffect(() => {\n    const getBidderData = () => {\n      if (bidders && bidders.length > 0) {\n        const bidderData = bidders.find((bidder) => bidder.account === account)\n        if (bidderData) {\n          return bidderData\n        }\n      }\n      const bidderInfo = getBidderInfo(account)\n      const defaultBidderData = {\n        position: null,\n        samePositionAsAbove: false,\n        isTopPosition: false,\n        amount: BIG_ZERO,\n        ...bidderInfo,\n      }\n      return defaultBidderData\n    }\n    if (connectedBidder && connectedBidder.isWhitelisted) {\n      const bidderData = getBidderData()\n      if (!isEqual(bidderData, connectedBidder.bidderData)) {\n        setConnectedBidder({\n          account,\n          isWhitelisted: true,\n          bidderData,\n        })\n      }\n    }\n  }, [account, connectedBidder, bidders])\n\n  return {\n    currentAuction,\n    bidders,\n    connectedBidder,\n    refreshBidders: setLastUpdated,\n  }\n}\n"],"sourceRoot":""}