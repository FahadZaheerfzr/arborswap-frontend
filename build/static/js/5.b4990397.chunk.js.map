{"version":3,"sources":["components/Links/index.tsx","state/burn/hooks.ts","views/RemoveLiquidity/index.tsx","hooks/useDebouncedChangeHandler.ts"],"names":["StyledInternalLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","primary","useBurnState","useSelector","state","burn","BorderCard","div","cardBorder","RemoveLiquidity","_ref2","_useCurrency","_useCurrency2","_parsedAmounts$Field$","_parsedAmounts$Field$2","_parsedAmounts$Field$3","_parsedAmounts$Field$4","_parsedAmounts$Field$5","_parsedAmounts$Field$6","_formattedAmounts","_parsedAmounts$Field$7","_pair$liquidityToken","_parsedAmounts$Field$11","_parsedAmounts$Field$12","_currencyA$symbol2","_parsedAmounts$Field$13","_parsedAmounts$Field$14","_currencyB$symbol2","_currencyA$symbol3","_currencyB$symbol3","history","_ref2$match$params","match","params","currencyIdA","currencyIdB","currencyA","useCurrency","undefined","currencyB","_useActiveWeb3React","useActiveWeb3React","account","chainId","library","_useMemo","useMemo","wrappedCurrency","_useMemo2","_slicedToArray","tokenA","tokenB","t","useTranslation","gasPrice","useGasPrice","_useBurnState","independentField","typedValue","_useDerivedBurnInfo","_pair$liquidityToken$","_tokens","_liquidityValues","_parsedAmounts","_usePair","usePair","pair","relevantTokenBalances","useTokenBalances","liquidityToken","userLiquidity","address","tokens","_defineProperty","Field","CURRENCY_A","CURRENCY_B","LIQUIDITY","totalSupply","useTotalSupply","liquidityValueA","JSBI","greaterThanOrEqual","raw","TokenAmount","getLiquidityValue","liquidityValueB","liquidityValues","percentToRemove","Percent","LIQUIDITY_PERCENT","independentAmount","tryParseAmount","greaterThan","liquidityValue","error","_error","parsedAmounts","token","multiply","quotient","useDerivedBurnInfo","_useBurnActionHandler","dispatch","useDispatch","onUserInput","useCallback","field","typeInput","useBurnActionHandlers","_onUserInput","isValid","_useState","useState","_useState2","showDetailed","setShowDetailed","_useState3","_useState4","attemptingTxn","setAttemptingTxn","_useState5","_useState6","txHash","setTxHash","deadline","useTransactionDeadline","_useUserSlippageToler","useUserSlippageTolerance","allowedSlippage","formattedAmounts","equalTo","lessThan","toFixed","toSignificant","atMaxAmount","pairContract","usePairContract","_useState7","_useState8","signatureData","setSignatureData","_useApproveCallback","useApproveCallback","ROUTER_ADDRESS","_useApproveCallback2","approval","approveCallback","_onAttemptToApprove","_asyncToGenerator","_regeneratorRuntime","mark","_callee","liquidityAmount","nonce","EIP712Domain","domain","Permit","message","data","wrap","_context","prev","next","Error","nonces","sent","name","type","version","verifyingContract","owner","spender","value","toString","toHexString","toNumber","JSON","stringify","types","primaryType","send","then","splitSignature","signature","v","r","s","catch","err","code","stop","apply","arguments","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","addTransaction","useTransactionAdder","onRemove","_onRemove","_callee2","_amountsMin","currencyAmountA","currencyAmountB","router","amountsMin","currencyBIsETH","oneCurrencyIsETH","methodNames","args","safeGasEstimates","indexOfSuccessfulEstimation","methodName","safeGasEstimate","_context2","getRouterContract","calculateSlippageAmount","ETHER","ApprovalState","APPROVED","Promise","all","map","_router$estimateGas","estimateGas","_toConsumableArray","calculateGasMargin","console","findIndex","BigNumber","isBigNumber","concat","gasLimit","response","_parsedAmounts$Field$15","_parsedAmounts$Field$16","summary","symbol","hash","modalHeader","_parsedAmounts$Field$8","_parsedAmounts$Field$9","_jsxs","AutoColumn","gap","children","RowBetween","align","_jsx","Text","fontSize","RowFixed","CurrencyLogo","currency","size","ml","AddIcon","width","small","textAlign","pt","slippage","modalBottom","_currencyA$symbol","_currencyB$symbol","_parsedAmounts$Field$10","_Fragment","assetA","assetB","DoubleCurrencyLogo","currency0","currency1","margin","priceOf","Button","disabled","onClick","pendingText","amountA","symbolA","amountB","symbolB","liquidityPercentChangeCallback","oneCurrencyIsWETH","Boolean","currencyEquals","WETH","handleSelectCurrencyA","currencyId","push","handleSelectCurrencyB","handleDismissConfirmation","_useDebouncedChangeHa","onChange","debouncedMs","length","inner","setInner","timer","useRef","onChangeInner","newValue","current","clearTimeout","setTimeout","useEffect","useDebouncedChangeHandler","Number","parseInt","_useDebouncedChangeHa2","innerLiquidityPercentage","setInnerLiquidityPercentage","_useModal","useModal","TransactionConfirmationModal","title","customOnDismiss","content","ConfirmationModalContent","topContent","bottomContent","onPresentRemoveLiquidity","Page","AppBody","AppHeader","backTo","subtitle","noConfig","CardBody","variant","scale","bold","mb","style","lineHeight","Slider","min","max","onValueChanged","Math","ceil","Flex","flexWrap","justifyContent","ColumnCenter","ArrowDownIcon","color","my","textTransform","LightGreyCard","id","to","Box","CurrencyInputPanel","onMax","showMaxButton","disableCurrencySelect","onCurrencySelect","hideBalance","label","marginTop","position","mt","NOT_APPROVED","mr","PENDING","Dots","ConnectWalletButton","minWidth","maxWidth","MinimalPositionCard","showUnwrapped"],"mappings":"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","file":"static/js/5.b4990397.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\n// An internal link from the react-router-dom library that is correctly styled\nconst StyledInternalLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\nexport default StyledInternalLink\n","import { Currency, CurrencyAmount, JSBI, Pair, Percent, TokenAmount } from '@arborswap/sdk'\nimport { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useTokenBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nexport function useBurnState(): AppState['burn'] {\n  return useSelector<AppState, AppState['burn']>((state) => state.burn)\n}\n\nexport function useDerivedBurnInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  pair?: Pair | null\n  parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: TokenAmount\n    [Field.CURRENCY_A]?: CurrencyAmount\n    [Field.CURRENCY_B]?: CurrencyAmount\n  }\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue } = useBurnState()\n\n  // pair + totalsupply\n  const [, pair] = usePair(currencyA, currencyB)\n\n  // balances\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\n  const userLiquidity: undefined | TokenAmount = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\n\n  const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n  const tokens = {\n    [Field.CURRENCY_A]: tokenA,\n    [Field.CURRENCY_B]: tokenB,\n    [Field.LIQUIDITY]: pair?.liquidityToken,\n  }\n\n  // liquidity values\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n  const liquidityValueA =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenA &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\n      ? new TokenAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).raw)\n      : undefined\n  const liquidityValueB =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenB &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\n      ? new TokenAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).raw)\n      : undefined\n  const liquidityValues: { [Field.CURRENCY_A]?: TokenAmount; [Field.CURRENCY_B]?: TokenAmount } = {\n    [Field.CURRENCY_A]: liquidityValueA,\n    [Field.CURRENCY_B]: liquidityValueB,\n  }\n\n  let percentToRemove: Percent = new Percent('0', '100')\n  // user specified a %\n  if (independentField === Field.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, '100')\n  }\n  // user specified a specific amount of liquidity tokens\n  else if (independentField === Field.LIQUIDITY) {\n    if (pair?.liquidityToken) {\n      const independentAmount = tryParseAmount(typedValue, pair.liquidityToken)\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\n        percentToRemove = new Percent(independentAmount.raw, userLiquidity.raw)\n      }\n    }\n  }\n  // user specified a specific amount of token a or b\n  else if (tokens[independentField]) {\n    const independentAmount = tryParseAmount(typedValue, tokens[independentField])\n    const liquidityValue = liquidityValues[independentField]\n    if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n      percentToRemove = new Percent(independentAmount.raw, liquidityValue.raw)\n    }\n  }\n\n  const parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: TokenAmount\n    [Field.CURRENCY_A]?: TokenAmount\n    [Field.CURRENCY_B]?: TokenAmount\n  } = {\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\n    [Field.LIQUIDITY]:\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\n        ? new TokenAmount(userLiquidity.token, percentToRemove.multiply(userLiquidity.raw).quotient)\n        : undefined,\n    [Field.CURRENCY_A]:\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\n        ? new TokenAmount(tokenA, percentToRemove.multiply(liquidityValueA.raw).quotient)\n        : undefined,\n    [Field.CURRENCY_B]:\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\n        ? new TokenAmount(tokenB, percentToRemove.multiply(liquidityValueB.raw).quotient)\n        : undefined,\n  }\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  return { pair, parsedAmounts, error }\n}\n\nexport function useBurnActionHandlers(): {\n  onUserInput: (field: Field, typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onUserInput,\n  }\n}\n","import React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { splitSignature } from '@ethersproject/bytes'\nimport { Contract } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, Percent, WETH } from '@arborswap/sdk'\nimport { Button, Text, AddIcon, ArrowDownIcon, CardBody, Slider, Box, Flex, useModal } from '@arborswap/uikit'\nimport { RouteComponentProps } from 'react-router'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\nimport { LightGreyCard } from '../../components/Card'\n\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../../components/Logo'\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { usePairContract } from '../../hooks/useContract'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport StyledInternalLink from '../../components/Links'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { currencyId } from '../../utils/currencyId'\nimport useDebouncedChangeHandler from '../../hooks/useDebouncedChangeHandler'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback'\nimport Dots from '../../components/Loader/Dots'\nimport { useBurnActionHandlers, useDerivedBurnInfo, useBurnState } from '../../state/burn/hooks'\n\nimport { Field } from '../../state/burn/actions'\nimport { useGasPrice, useUserSlippageTolerance } from '../../state/user/hooks'\nimport Page from '../Page'\n\nconst BorderCard = styled.div`\n  border: solid 1px ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 16px;\n  padding: 16px;\n`\n\nexport default function RemoveLiquidity({\n  history,\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n}: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\n  const { account, chainId, library } = useActiveWeb3React()\n  const [tokenA, tokenB] = useMemo(\n    () => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)],\n    [currencyA, currencyB, chainId],\n  )\n\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n\n  // burn state\n  const { independentField, typedValue } = useBurnState()\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\n  const isValid = !error\n\n  // modal and loading\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\n\n  // txn values\n  const [txHash, setTxHash] = useState<string>('')\n  const deadline = useTransactionDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\n      ? '0'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\n      ? '<1'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]:\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_A]:\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_B]:\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n  }\n\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\n\n  // pair contract\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\n\n  // allowance handling\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], ROUTER_ADDRESS)\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library || !deadline) throw new Error('missing dependencies')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    // try to gather a signature for permission\n    const nonce = await pairContract.nonces(account)\n\n    const EIP712Domain = [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ]\n    const domain = {\n      name: 'Arbor LPs',\n      version: '1',\n      chainId,\n      verifyingContract: pair.liquidityToken.address,\n    }\n    const Permit = [\n      { name: 'owner', type: 'address' },\n      { name: 'spender', type: 'address' },\n      { name: 'value', type: 'uint256' },\n      { name: 'nonce', type: 'uint256' },\n      { name: 'deadline', type: 'uint256' },\n    ]\n    const message = {\n      owner: account,\n      spender: ROUTER_ADDRESS,\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadline.toNumber(),\n    }\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit,\n      },\n      domain,\n      primaryType: 'Permit',\n      message,\n    })\n\n    library\n      .send('eth_signTypedData_v4', [account, data])\n      .then(splitSignature)\n      .then((signature) => {\n        setSignatureData({\n          v: signature.v,\n          r: signature.r,\n          s: signature.s,\n          deadline: deadline.toNumber(),\n        })\n      })\n      .catch((err) => {\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n        if (err?.code !== 4001) {\n          approveCallback()\n        }\n      })\n  }\n\n  // wrapped onUserInput to clear signatures\n  const onUserInput = useCallback(\n    (field: Field, value: string) => {\n      setSignatureData(null)\n      return _onUserInput(field, value)\n    },\n    [_onUserInput],\n  )\n\n  const onLiquidityInput = useCallback((value: string): void => onUserInput(Field.LIQUIDITY, value), [onUserInput])\n  const onCurrencyAInput = useCallback((value: string): void => onUserInput(Field.CURRENCY_A, value), [onUserInput])\n  const onCurrencyBInput = useCallback((value: string): void => onUserInput(Field.CURRENCY_B, value), [onUserInput])\n\n  // tx sending\n  const addTransaction = useTransactionAdder()\n  async function onRemove() {\n    if (!chainId || !library || !account || !deadline) throw new Error('missing dependencies')\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts')\n    }\n    const router = getRouterContract(chainId, library, account)\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\n    }\n\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    const currencyBIsETH = currencyB === ETHER\n    const oneCurrencyIsETH = currencyA === ETHER || currencyBIsETH\n\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\n\n    let methodNames: string[]\n    let args: Array<string | string[] | number | boolean>\n    // we have approval, use normal remove liquidity\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n      // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n    }\n    // we have a signature, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityETHWithPermit\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n      // removeLiquidityETHWithPermit\n      else {\n        methodNames = ['removeLiquidityWithPermit']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n    } else {\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\n    }\n\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\n      methodNames.map((methodName) =>\n        router.estimateGas[methodName](...args)\n          .then(calculateGasMargin)\n          .catch((err) => {\n            console.error(`estimateGas failed`, methodName, args, err)\n            return undefined\n          }),\n      ),\n    )\n\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex((safeGasEstimate) =>\n      BigNumber.isBigNumber(safeGasEstimate),\n    )\n\n    // all estimations failed...\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.')\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation]\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\n\n      setAttemptingTxn(true)\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate,\n        gasPrice,\n      })\n        .then((response: TransactionResponse) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Remove ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencyA?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencyB?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        })\n        .catch((err: Error) => {\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          console.error(err)\n        })\n    }\n  }\n\n  function modalHeader() {\n    return (\n      <AutoColumn gap=\"md\">\n        <RowBetween align=\"flex-end\">\n          <Text fontSize=\"24px\">{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyA} size=\"24px\" />\n            <Text fontSize=\"24px\" ml=\"10px\">\n              {currencyA?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowFixed>\n          <AddIcon width=\"16px\" />\n        </RowFixed>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize=\"24px\">{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyB} size=\"24px\" />\n            <Text fontSize=\"24px\" ml=\"10px\">\n              {currencyB?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n\n        <Text small textAlign=\"left\" pt=\"12px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  function modalBottom() {\n    return (\n      <>\n        <RowBetween>\n          <Text>\n            {t('%assetA%/%assetB% Burned', { assetA: currencyA?.symbol ?? '', assetB: currencyB?.symbol ?? '' })}\n          </Text>\n          <RowFixed>\n            <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin />\n            <Text>{parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}</Text>\n          </RowFixed>\n        </RowBetween>\n        {pair && (\n          <>\n            <RowBetween>\n              <Text>{t('Price')}</Text>\n              <Text>\n                1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n              </Text>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <Text>\n                1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n              </Text>\n            </RowBetween>\n          </>\n        )}\n        <Button disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\n          {t('Confirm')}\n        </Button>\n      </>\n    )\n  }\n\n  const pendingText = t('Removing %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencyA?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencyB?.symbol ?? '',\n  })\n\n  const liquidityPercentChangeCallback = useCallback(\n    (value: number) => {\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\n    },\n    [onUserInput],\n  )\n\n  const oneCurrencyIsETH = currencyA === ETHER || currencyB === ETHER\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(WETH[chainId], currencyA)) ||\n        (currencyB && currencyEquals(WETH[chainId], currencyB))),\n  )\n\n  const handleSelectCurrencyA = useCallback(\n    (currency: Currency) => {\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\n        history.push(`/remove/${currencyId(currency)}/${currencyIdA}`)\n      } else {\n        history.push(`/remove/${currencyId(currency)}/${currencyIdB}`)\n      }\n    },\n    [currencyIdA, currencyIdB, history],\n  )\n  const handleSelectCurrencyB = useCallback(\n    (currency: Currency) => {\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\n        history.push(`/remove/${currencyIdB}/${currencyId(currency)}`)\n      } else {\n        history.push(`/remove/${currencyIdA}/${currencyId(currency)}`)\n      }\n    },\n    [currencyIdA, currencyIdB, history],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setSignatureData(null) // important that we clear signature data to avoid bad sigs\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\n    }\n    setTxHash('')\n  }, [onUserInput, txHash])\n\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\n    liquidityPercentChangeCallback,\n  )\n\n  const [onPresentRemoveLiquidity] = useModal(\n    <TransactionConfirmationModal\n      title={t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash || ''}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n    />,\n    true,\n    true,\n    'removeLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          backTo=\"/pool\"\n          title={t('Remove %assetA%-%assetB% liquidity', {\n            assetA: currencyA?.symbol ?? '',\n            assetB: currencyB?.symbol ?? '',\n          })}\n          subtitle={`To receive ${currencyA?.symbol} and ${currencyB?.symbol}`}\n          noConfig\n        />\n\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            <RowBetween>\n              <Text>{t('Amount')}</Text>\n              <Button variant=\"text\" scale=\"sm\" onClick={() => setShowDetailed(!showDetailed)}>\n                {showDetailed ? t('Simple') : t('Detailed')}\n              </Button>\n            </RowBetween>\n            {!showDetailed && (\n              <BorderCard>\n                <Text fontSize=\"40px\" bold mb=\"16px\" style={{ lineHeight: 1 }}>\n                  {formattedAmounts[Field.LIQUIDITY_PERCENT]}%\n                </Text>\n                <Slider\n                  name=\"lp-amount\"\n                  min={0}\n                  max={100}\n                  value={innerLiquidityPercentage}\n                  onValueChanged={(value) => setInnerLiquidityPercentage(Math.ceil(value))}\n                  mb=\"16px\"\n                />\n                <Flex flexWrap=\"wrap\" justifyContent=\"space-evenly\">\n                  <Button variant=\"tertiary\" scale=\"sm\" onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')}>\n                    25%\n                  </Button>\n                  <Button variant=\"tertiary\" scale=\"sm\" onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')}>\n                    50%\n                  </Button>\n                  <Button variant=\"tertiary\" scale=\"sm\" onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')}>\n                    75%\n                  </Button>\n                  <Button variant=\"tertiary\" scale=\"sm\" onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}>\n                    Max\n                  </Button>\n                </Flex>\n              </BorderCard>\n            )}\n          </AutoColumn>\n          {!showDetailed && (\n            <>\n              <ColumnCenter>\n                <ArrowDownIcon color=\"textSubtle\" width=\"24px\" my=\"16px\" />\n              </ColumnCenter>\n              <AutoColumn gap=\"10px\">\n                <Text bold color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                  {t('You will receive')}\n                </Text>\n                <LightGreyCard>\n                  <Flex justifyContent=\"space-between\" mb=\"8px\">\n                    <Flex>\n                      <CurrencyLogo currency={currencyA} />\n                      <Text small color=\"textSubtle\" id=\"remove-liquidity-tokena-symbol\" ml=\"4px\">\n                        {currencyA?.symbol}\n                      </Text>\n                    </Flex>\n                    <Text small>{formattedAmounts[Field.CURRENCY_A] || '-'}</Text>\n                  </Flex>\n                  <Flex justifyContent=\"space-between\">\n                    <Flex>\n                      <CurrencyLogo currency={currencyB} />\n                      <Text small color=\"textSubtle\" id=\"remove-liquidity-tokenb-symbol\" ml=\"4px\">\n                        {currencyB?.symbol}\n                      </Text>\n                    </Flex>\n                    <Text small>{formattedAmounts[Field.CURRENCY_B] || '-'}</Text>\n                  </Flex>\n                  {chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? (\n                    <RowBetween style={{ justifyContent: 'flex-end', fontSize: '14px' }}>\n                      {oneCurrencyIsETH ? (\n                        <StyledInternalLink\n                          to={`/remove/${currencyA === ETHER ? WETH[chainId].address : currencyIdA}/${\n                            currencyB === ETHER ? WETH[chainId].address : currencyIdB\n                          }`}\n                        >\n                          {t('Receive WBNB')}\n                        </StyledInternalLink>\n                      ) : oneCurrencyIsWETH ? (\n                        <StyledInternalLink\n                          to={`/remove/${currencyA && currencyEquals(currencyA, WETH[chainId]) ? 'BNB' : currencyIdA}/${\n                            currencyB && currencyEquals(currencyB, WETH[chainId]) ? 'BNB' : currencyIdB\n                          }`}\n                        >\n                          {t('Receive BNB')}\n                        </StyledInternalLink>\n                      ) : null}\n                    </RowBetween>\n                  ) : null}\n                </LightGreyCard>\n              </AutoColumn>\n            </>\n          )}\n\n          {showDetailed && (\n            <Box my=\"16px\">\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.LIQUIDITY]}\n                onUserInput={onLiquidityInput}\n                onMax={() => {\n                  onUserInput(Field.LIQUIDITY_PERCENT, '100')\n                }}\n                showMaxButton={!atMaxAmount}\n                disableCurrencySelect\n                currency={pair?.liquidityToken}\n                pair={pair}\n                id=\"liquidity-amount\"\n                onCurrencySelect={() => null}\n              />\n              <ColumnCenter>\n                <ArrowDownIcon width=\"24px\" my=\"16px\" />\n              </ColumnCenter>\n              <CurrencyInputPanel\n                hideBalance\n                value={formattedAmounts[Field.CURRENCY_A]}\n                onUserInput={onCurrencyAInput}\n                onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                showMaxButton={!atMaxAmount}\n                currency={currencyA}\n                label={t('Output')}\n                onCurrencySelect={handleSelectCurrencyA}\n                id=\"remove-liquidity-tokena\"\n              />\n              <ColumnCenter>\n                <AddIcon width=\"24px\" my=\"16px\" />\n              </ColumnCenter>\n              <CurrencyInputPanel\n                hideBalance\n                value={formattedAmounts[Field.CURRENCY_B]}\n                onUserInput={onCurrencyBInput}\n                onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                showMaxButton={!atMaxAmount}\n                currency={currencyB}\n                label={t('Output')}\n                onCurrencySelect={handleSelectCurrencyB}\n                id=\"remove-liquidity-tokenb\"\n              />\n            </Box>\n          )}\n          {pair && (\n            <AutoColumn gap=\"10px\" style={{ marginTop: '16px' }}>\n              <Text bold color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Prices')}\n              </Text>\n              <LightGreyCard>\n                <Flex justifyContent=\"space-between\">\n                  <Text small color=\"textSubtle\">\n                    1 {currencyA?.symbol} =\n                  </Text>\n                  <Text small>\n                    {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n                  </Text>\n                </Flex>\n                <Flex justifyContent=\"space-between\">\n                  <Text small color=\"textSubtle\">\n                    1 {currencyB?.symbol} =\n                  </Text>\n                  <Text small>\n                    {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n                  </Text>\n                </Flex>\n              </LightGreyCard>\n            </AutoColumn>\n          )}\n          <Box position=\"relative\" mt=\"16px\">\n            {!account ? (\n              <ConnectWalletButton />\n            ) : (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED || signatureData !== null ? 'success' : 'primary'}\n                  onClick={onAttemptToApprove}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n                  width=\"100%\"\n                  mr=\"0.5rem\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <Dots>{t('Enabling')}</Dots>\n                  ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable')\n                  )}\n                </Button>\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    onPresentRemoveLiquidity()\n                  }}\n                  width=\"100%\"\n                  disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\n                >\n                  {error || t('Remove')}\n                </Button>\n              </RowBetween>\n            )}\n          </Box>\n        </CardBody>\n      </AppBody>\n\n      {pair ? (\n        <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </Page>\n  )\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\n * @param value value that is rapidly changing\n * @param onChange change handler that should receive the debounced updates to the value\n * @param debouncedMs how long we should wait for changes to be applied\n */\nexport default function useDebouncedChangeHandler<T>(\n  value: T,\n  onChange: (newValue: T) => void,\n  debouncedMs = 100,\n): [T, (value: T) => void] {\n  const [inner, setInner] = useState<T>(() => value)\n  const timer = useRef<ReturnType<typeof setTimeout>>()\n\n  const onChangeInner = useCallback(\n    (newValue: T) => {\n      setInner(newValue)\n      if (timer.current) {\n        clearTimeout(timer.current)\n      }\n      timer.current = setTimeout(() => {\n        onChange(newValue)\n        timer.current = undefined\n      }, debouncedMs)\n    },\n    [debouncedMs, onChange],\n  )\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n      timer.current = undefined\n    }\n    setInner(value)\n  }, [value])\n\n  return [inner, onChangeInner]\n}\n"],"sourceRoot":""}